{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","mermaid","d3","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","mappingEditor","diagramStyleFormatter","mermaidAPI","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","styleValues","style","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","moddedSeriesVal","format","valueName","valueOptions","valueMaps","op","text","mappingTypes","name","content","mode","mermaidServiceUrl","init","securityLevel","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequence","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","svgData","updateDiagram","render","metricName","replacedText","replace","index","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","mapping","type","valueToText","rangeToText","valueMap","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramContainer","_this","renderCallback","svgCode","bindFunctions","html","templatedURL","scopedVars","method","url","headers","then","successCallback","response","clearDiagram","renderDiagram","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","applyValueMapping","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","getWorstSeries","showLowest","copy","clone","series1","series2","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","dataItem","valueMapping","parseFloat","rangeMapping","rangeNapping","to","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","updateCanvasStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","selectElementById","container","select","selectElementByEdgeLabel","selectAll","filter","selectDivElementByAlias","targetElement","node","parentShape","closest","selectTextElementByAlias","styleD3Shapes","shapes","div","fo","classed","styleFlowChartEdgeLabel","edgeParent","parentNode","v","styleTextEdgeLabel","each","el","markerBox","getBBox","y","line","insert","attr","injectCustomStyle","diagramDiv","diagramStyleElement","customStyleElement","updateStyle","key","empty","renderingCompleted","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import mermaid from './libs/mermaid/dist/mermaid';\r\nimport d3 from './libs/d3/dist/d3.min';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {\r\n  MetricsPanelCtrl\r\n} from 'app/plugins/sdk';\r\nimport {\r\n  diagramEditor,\r\n  displayEditor,\r\n  compositeEditor,\r\n  mappingEditor\r\n} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!';\r\n\r\n// Work In Progress\r\n// Build a custom style editor\r\nimport { diagramStyleFormatter } from './diagramStyle';\r\n\r\nconst mermaidAPI = mermaid.mermaidAPI;\r\n\r\nconst panelDefaults = {\r\n  composites: [],\r\n  metricCharacterReplacements: [],\r\n  // other style overrides\r\n  seriesOverrides: [],\r\n  thresholds: '0,10',\r\n  decimals: 2, // decimal precision\r\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n  styleValues: {},\r\n  style: '',\r\n  legend: {\r\n    show: true,\r\n    min: true,\r\n    max: true,\r\n    avg: true,\r\n    current: true,\r\n    total: true,\r\n    gradient: {\r\n      enabled: true,\r\n      show: true\r\n    }\r\n  },\r\n  maxDataPoints: 100,\r\n  mappingType: 1,\r\n  maxWidth: false,\r\n  nullPointMode: 'connected',\r\n  moddedSeriesVal: 0,\r\n  format: 'none',\r\n  valueName: 'avg',\r\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n  valueMaps: [{\r\n    value: 'null',\r\n    op: '=',\r\n    text: 'N/A'\r\n  }],\r\n  mappingTypes: [\r\n    {name: 'value to text', value: 1},\r\n    {name: 'range to text', value: 2},\r\n  ],\r\n  content: 'graph LR\\n' +\r\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n    'A --> C(Round Rect)\\n' +\r\n    'B --> D{Rhombus}\\n' +\r\n    'C --> D\\n',\r\n  mode: 'content', //allowed values: 'content' and 'url'\r\n  mermaidServiceUrl: '',\r\n  init: {\r\n    securityLevel: 'loose',\r\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    cloneCssStyles: true, // - This options controls whether or not the css rules should be copied into the generated svg\r\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n    flowchart: {\r\n      htmlLabels: true,\r\n      useMaxWidth: true\r\n    },\r\n    sequence: {\r\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n      actorMargin: 50, // - Margin between actors\r\n      width: 150, // - Width of actor boxes\r\n      height: 65, // - Height of actor boxes00000000001111\r\n      boxMargin: 10, // - Margin around l01oop boxes\r\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n      noteMargin: 10, // - margin around notes\r\n      messageMargin: 35, // - Space between messages\r\n      mirrorActors: true, // - mirror actors under diagram\r\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n    },\r\n    gantt: {\r\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n      barHeight: 20, // - the height of the bars in the graph\r\n      barGap: 4, // - the margin between the different activities in the gantt diagram\r\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n      fontSize: 11, // - font size ...\r\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n      numberSectionStyles: 3, // - the number of alternating section styles\r\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n    },\r\n    //classDiagram: {},\r\n    //info: {}\r\n  }\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce, $http) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, panelDefaults);\r\n    this.$http = $http;\r\n    this.panel.graphId = 'diagram_' + this.panel.id;\r\n    this.containerDivId = 'container_' + this.panel.graphId;\r\n    this.$sce = $sce;\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.initializeMermaid();\r\n  }\r\n\r\n  initializeMermaid() {\r\n    mermaidAPI.initialize(this.panel.init);\r\n    mermaidAPI.parseError = this.handleParseError.bind(this);\r\n  }\r\n\r\n  handleParseError(err, hash) {\r\n    this.error = 'Failed to parse diagram definition';\r\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Diagram', diagramEditor, 2);\r\n    this.addEditorTab('Display', displayEditor, 3);\r\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\r\n    this.addEditorTab('Value Mappings', mappingEditor, 5);\r\n  }\r\n\r\n  getDiagramContainer() {\r\n    return $(document.getElementById(this.containerDivId));\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    console.debug('received data');\r\n    console.debug(dataList);\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    console.debug('mapped dataList to series');\r\n    console.debug(this.series);\r\n    var data = this.setValues();\r\n    // this update works for local diagrams, if the url method is used the data has to be stored in the callback\r\n    this.svgData = data;\r\n    this.updateDiagram(data);\r\n    this.render();\r\n  }\r\n\r\n  replaceMetricCharacters(metricName) {\r\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\r\n    if (typeof metricName !== 'string') return \"DATASOURCE_SENT_INVALID_METRIC_TARGET\";\r\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\r\n    for (var index in this.panel.metricCharacterReplacements) {\r\n      var replacement = this.panel.metricCharacterReplacements[index];\r\n      // start with a simple replacement\r\n      var pattern = replacement.replacementPattern;\r\n      // check if the pattern is empty\r\n      if (pattern.length === 0) continue;\r\n      // if it is a regex, convert\r\n      if (pattern[0] === '/') {\r\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\r\n      }\r\n      replacedText = replacedText.replace(\r\n        pattern,\r\n        replacement.replaceWithText\r\n      );\r\n    }\r\n    return replacedText;\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var alias = this.replaceMetricCharacters(seriesData.target);\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: alias,\r\n      unit: seriesData.unit\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    var datapoints = seriesData.datapoints || [];\r\n    if (datapoints && datapoints.length > 0) {\r\n      var last = datapoints[datapoints.length - 1][1];\r\n      var from = this.range.from;\r\n      if (last - from < -10000) {\r\n        series.isOutsideRange = true;\r\n      }\r\n    }\r\n    return series;\r\n  } // End seriesHandler()\r\n\r\n  addSeriesOverride(override) {\r\n    this.panel.seriesOverrides.push(override || {});\r\n  }\r\n\r\n  removeSeriesOverride(override) {\r\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n    this.refresh();\r\n  }\r\n\r\n  addComposite(composite) {\r\n    this.panel.composites.push(composite || {});\r\n  }\r\n  removeComposite(composite) {\r\n    this.panel.composites = _.without(this.panel.composites, composite);\r\n    this.refresh();\r\n  }\r\n  getSeriesNamesForComposites() {\r\n    return _.map(this.$scope.ctrl.series, function(series) {\r\n      return series.alias;\r\n    });\r\n  }\r\n\r\n  addMetricToComposite(composite) {\r\n    if (composite.metrics === undefined) {\r\n      composite.metrics = [{}];\r\n    } else {\r\n      composite.metrics.push({});\r\n    }\r\n    this.refresh();\r\n  }\r\n  removeMetricFromComposite(composite, metric) {\r\n    composite.metrics = _.without(composite.metrics, metric);\r\n    this.refresh();\r\n  }\r\n\r\n  addMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements.push(replacement || {\r\n      replacementPattern: '',\r\n      replaceWithText: '_'\r\n    });\r\n  }\r\n  removeMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements = _.without(this.panel.metricCharacterReplacements, replacement);\r\n    this.refresh();\r\n  }\r\n\r\n  addValueMapping(mapping) {\r\n    this.panel.valueMaps.push(mapping || {});\r\n  }\r\n\r\n  removeValueMapping(mapping) {\r\n    this.panel.valueMaps = _.without(this.panel.valueMaps, mapping);\r\n  }\r\n\r\n  addEntryToValueMapping(mapping) {\r\n    if (mapping.type == 1) {\r\n      if (mapping.valueToText === undefined) {\r\n        mapping.valueToText = [{}];\r\n      } else {\r\n        mapping.valueToText.push({});\r\n      }\r\n    } else if (mapping.type == 2) {\r\n      if (mapping.rangeToText === undefined) {\r\n        mapping.rangeToText = [{}];\r\n      } else {\r\n        mapping.rangeToText.push({});\r\n      }\r\n    }\r\n  }\r\n\r\n  removeEntryFromValueMapping(valueMap, mapping) {\r\n    if (valueMap.type == 1) {\r\n      valueMap.valueToText = _.without(valueMap.valueToText, mapping);\r\n    } else if (valueMap.type == 2) {\r\n      valueMap.rangeToText = _.without(valueMap.rangeToText, mapping);\r\n    }\r\n  }\r\n  \r\n  updateThresholds() {\r\n    var thresholdCount = this.panel.thresholds.length;\r\n    var colorCount = this.panel.colors.length;\r\n    this.refresh();\r\n  }\r\n\r\n  changeColor(colorIndex, color) {\r\n    this.panel.colors[colorIndex] = color;\r\n  }\r\n\r\n  removeColor(colorIndex) {\r\n    this.panel.colors.splice(colorIndex, 1);\r\n  }\r\n\r\n  addColor() {\r\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.refresh();\r\n  }\r\n\r\n  clearDiagram() {\r\n    if ($('#'+this.panel.graphId).length) {\r\n      $('#' + this.panel.graphId).remove();\r\n    }\r\n    this.svg = {};\r\n  }\r\n\r\n  renderDiagram(graphDefinition, data) {\r\n    // substitute values inside \"link text\"\r\n    // this will look for any composite prefixed with a # and substitute the value of the composite\r\n    // if a series alias is found, in the form #alias, the value will be substituted\r\n    // this allows link values to be displayed based on the metric\r\n    graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\r\n    graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\r\n    var diagramContainer = $(document.getElementById(this.containerDivId));\r\n    var _this = this;\r\n    var renderCallback = function(svgCode, bindFunctions) {\r\n      if (svgCode === '') {\r\n        diagramContainer.html('<p>There was a problem rendering the graph</p>');\r\n      } else {\r\n        diagramContainer.html(svgCode);\r\n        if (bindFunctions) {\r\n          bindFunctions(diagramContainer[0]);\r\n        }\r\n        console.debug(\"Inside rendercallback of renderDiagram\");\r\n        // svgData is empty when this callback happens, update it so the styles will be applied\r\n        _this.svgData = data;\r\n        // force a render or we will not see an update\r\n        _this.render();\r\n      }\r\n    };\r\n    \r\n    try {\r\n      // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n      mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback, diagramContainer[0]);\r\n    } catch (err) {\r\n      diagramContainer.html('<p>Error rendering diagram. Check the diagram definition</p><p>'+ err + '</p>');\r\n    }\r\n  }\r\n  \r\n  updateDiagram(data) {\r\n    if (this.panel.content.length > 0) {\r\n      var mode = this.panel.mode;\r\n      if (mode == 'url') {\r\n        var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\r\n        var _this = this;\r\n        this.$http({\r\n          method: 'GET',\r\n          url: templatedURL,\r\n          headers: { 'Accept': 'text/x-mermaid,text/plain;q=0.9,*/*;q=0.8' }\r\n        }).then(function successCallback(response) {\r\n          //the response must have text/plain content-type\r\n          // clearing the diagram here will result in less artifacting waiting for the response\r\n          _this.clearDiagram();\r\n          _this.renderDiagram(response.data, data);\r\n        }, function errorCallback(response) {\r\n          console.warn('error', response);\r\n        })\r\n      } else {\r\n        this.clearDiagram();\r\n        this.renderDiagram(this.panel.content, data);\r\n      }\r\n    }\r\n  } // End updateDiagram()\r\n\r\n\r\n\r\n  /**\r\n   * substitute values inside \"link text\"\r\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\r\n   * if a series alias is found, in the form #alias, the value will be substituted\r\n   * this allows link values to be displayed based on the metric\r\n   *\r\n   * Prefix Modifier For Composites\r\n   *   # Raw Value of Series\r\n   *   ! Raw Value plus Metric Name\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\r\n   *\r\n   * Prefix Modifier For Series\r\n   *   # Raw Value of Series\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *\r\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\r\n   * @param  {[Array]} data [Series Data]\r\n   * @return {[String]} [Modified Graph Definition]\r\n   */\r\n  substituteHashPrefixedNotation(graphDefinition, data) {\r\n    // inspect the string, locate all # prefixed items, and replace them with the value\r\n    // of the series. If no matching series is found, leave it alone\r\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\r\n    if (matches === null) return graphDefinition;\r\n    // check if there is a composite with a matching name\r\n    for (var i = 0; i < matches.length; i++) {\r\n      var aMatch = matches[i];\r\n      var valueType = aMatch[0];\r\n      aMatch = aMatch.substring(1);\r\n      // check composites first\r\n      for (var j = 0; j < this.panel.composites.length; j++) {\r\n        var aComposite = this.panel.composites[j];\r\n        if (aComposite.name === aMatch) {\r\n          // found matching composite, get the valueFormatted\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[aComposite.name].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '!':\r\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[aComposite.name].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n            case '&':\r\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      // next check series\r\n      for (var k = 0; k < this.series.length; k++) {\r\n        var seriesItem = this.series[k];\r\n        if (seriesItem.alias === aMatch) {\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[seriesItem.alias].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[seriesItem.alias].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return graphDefinition;\r\n  }\r\n\r\n  setValues() {\r\n    var data = {};\r\n    if (this.series && this.series.length > 0) {\r\n      for (let i = 0; i < this.series.length; i++) {\r\n        let seriesItem = this.series[i];\r\n        console.debug('setting values for series');\r\n        console.debug(seriesItem);\r\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n        // store alias in data\r\n        data[seriesItem.alias].alias = seriesItem.alias;\r\n        var lastPoint = _.last(seriesItem.datapoints);\r\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n        if (this.panel.valueName === 'name') {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueRounded = 0;\r\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n        } else if (_.isString(lastValue)) {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n          data[seriesItem.alias].valueRounded = 0;\r\n        } else {\r\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\r\n          // put the value in quotes to escape \"most\" special characters\r\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n        }\r\n        if (this.panel.legend.gradient.enabled) {\r\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        } else {\r\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        }\r\n      }\r\n    }\r\n    // Map values to text if needed\r\n    this.applyValueMapping(data);\r\n    // now add the composites to data\r\n    for (let i = 0; i < this.panel.composites.length; i++) {\r\n      let aComposite = this.panel.composites[i];\r\n      let currentWorstSeries = null;\r\n      let currentWorstSeriesName = null;\r\n      for (let j = 0; j < aComposite.metrics.length; j++) {\r\n    \tlet aMetric = aComposite.metrics[j];\r\n    \tlet seriesName = aMetric.seriesName;\r\n        // make sure we have a match\r\n        if (!data.hasOwnProperty(seriesName)) {\r\n        \tcontinue;\r\n        }\r\n        let seriesItem = data[seriesName];\r\n        // check colorData thresholds\r\n        if (currentWorstSeries === null) {\r\n          currentWorstSeries = seriesItem;\r\n        } else {\r\n          currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem, aComposite.showLowest);\r\n        }\r\n      }\r\n      // Prefix the valueFormatted with the actual metric name\r\n      if (currentWorstSeries !== null) {\r\n    \tlet copy = _.clone(currentWorstSeries);\r\n    \tcopy.valueFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\r\n    \tcopy.valueRawFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.value;\r\n    \tcopy.valueFormatted = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\r\n        // now push the composite into data\r\n        data[aComposite.name] = copy;\r\n      }\r\n    }\r\n    return data;\r\n  } // End setValues()\r\n\r\n  getWorstSeries(series1, series2, showLowest) {\r\n    if (showLowest) {\r\n    \t// return series1 if the value is lower, otherwise return series2\r\n    \treturn series1.value < series2.value ? series1 : series2;\r\n    } else {\r\n    \t// return series1 if the value is greater, otherwise return series2\r\n    \treturn series1.value > series2.value ? series1 : series2;\r\n    }\r\n  }\r\n\r\n  getGradientForValue(data, value) {\r\n    console.debug('Getting gradient for value');\r\n    console.debug(data);\r\n    console.debug(value);\r\n    var min = Math.min.apply(Math, data.thresholds);\r\n    var max = Math.max.apply(Math, data.thresholds);\r\n    var absoluteDistance = max - min;\r\n    var valueDistanceFromMin = value - min;\r\n    var xPercent = valueDistanceFromMin / absoluteDistance;\r\n    // Get the smaller number to clamp at 0.999 max\r\n    xPercent = Math.min(0.999, xPercent);\r\n    // Get the larger number to clamp at 0.001 min\r\n    xPercent = Math.max(0.001, xPercent);\r\n    if (data.invertColors) {\r\n      xPercent = 1 - xPercent;\r\n    }\r\n\r\n    return getColorByXPercentage(this.canvas, xPercent);\r\n  }\r\n\r\n  applyOverrides(seriesItemAlias) {\r\n    var seriesItem = {},\r\n      colorData = {},\r\n      overrides = {};\r\n\r\n    console.debug('applying overrides for seriesItem');\r\n    console.debug(seriesItemAlias);\r\n    console.debug(this.panel.seriesOverrides);\r\n    for (var i = 0; i < this.panel.seriesOverrides.length; i++) {\r\n      console.debug('comparing:');\r\n      console.debug(this.panel.seriesOverrides[i]);\r\n\r\n      if (this.panel.seriesOverrides[i]) {\r\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n        var matches = seriesItemAlias.match(regex);\r\n        if (matches && matches.length > 0) {\r\n          overrides = this.panel.seriesOverrides[i];\r\n        }\r\n      }\r\n    }\r\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n      return Number(strVale.trim());\r\n    });\r\n    colorData.colorMap = this.panel.colors.slice();\r\n    colorData.invertColors = overrides.invertColors || false;\r\n    if (colorData.invertColors) {\r\n      colorData.colorMap.reverse();\r\n    }\r\n    seriesItem.colorData = colorData;\r\n\r\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n    seriesItem.format = overrides.unitFormat || this.panel.format;\r\n    return seriesItem;\r\n  }\r\n\r\n\tapplyValueMapping(data) {\r\n\t\tfor (let i = 0; i < this.panel.valueMaps.length; i++) {\r\n\t\t\tvar map = this.panel.valueMaps[i];\r\n\t\t\tif (! map.hasOwnProperty('alias'))\r\n\t\t\t\tcontinue;\r\n\t\t\tvar regex = kbn.stringToJsRegex(map.alias);\r\n\t\t\tconsole.debug(\"Checking mapping: \" +map.alias);\r\n\t\t\tfor(let j = 0; j < this.series.length; j++) {\r\n\t\t\t\tvar matches = this.series[j].alias.match(regex);\r\n\t\t\t\tconsole.debug(\"  Series: \" +this.series[j].alias);\r\n\t\t\t\tif (matches && matches.length > 0) {\r\n\t\t\t\t\tvar seriesItem = this.series[j];\r\n\t\t\t\t\tvar dataItem = data[seriesItem.alias];\r\n\t\t\t\t\tif (map.type == 1) {\r\n\t\t\t\t\t\tfor(let k = 0; k < map.valueToText.length; k++) {\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\t// Value mappings\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\tvar valueMapping = map.valueToText[k];\r\n\t\t\t\t\t\t\t\tconsole.debug(\"    Mapping: \" +dataItem.valueFormatted +\" =? \" +valueMapping.value);\r\n\t\t\t\t\t\t\t\tif (valueMapping.value === 'null') {\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t} else if (parseFloat(valueMapping.value) == dataItem.valueRounded) {\r\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\r\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +valueMapping.text);\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (map.type == 2) {\r\n\t\t\t\t\t\tfor(let k = 0; k < map.rangeToText.length; k++) {\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\t// Range Mappings\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\tvar rangeMapping = map.rangeToText[k];\r\n\t\t\t\t\t\t\t\tif (rangeMapping.from === 'null' && rangeNapping.to == 'null') {\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t} else if (parseFloat(rangeMapping.from) <= dataItem.valueRounded && parseFloat(rangeMapping.to) >= dataItem.valueRounded) {\r\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\r\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +rangeMapping.text);\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n  invertColorOrder() {\r\n    this.panel.colors.reverse();\r\n    this.refresh();\r\n  }\r\n\r\n  getDecimalsForValue(value) {\r\n    if (_.isNumber(this.panel.decimals)) {\r\n      return {\r\n        decimals: this.panel.decimals,\r\n        scaledDecimals: null\r\n      };\r\n    }\r\n\r\n    var delta = value / 2;\r\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n    var magn = Math.pow(10, -dec),\r\n      norm = delta / magn, // norm is between 1.0 and 10.0\r\n      size;\r\n\r\n    if (norm < 1.5) {\r\n      size = 1;\r\n    } else if (norm < 3) {\r\n      size = 2;\r\n      // special case for 2.5, requires an extra decimal\r\n      if (norm > 2.25) {\r\n        size = 2.5;\r\n        ++dec;\r\n      }\r\n    } else if (norm < 7.5) {\r\n      size = 5;\r\n    } else {\r\n      size = 10;\r\n    }\r\n\r\n    size *= magn;\r\n\r\n    // reduce starting decimals if not needed\r\n    if (Math.floor(value) === value) {\r\n      dec = 0;\r\n    }\r\n\r\n    var result = {};\r\n    result.decimals = Math.max(0, dec);\r\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n    return result;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    var templateSrv = this.templateSrv;\r\n    var diagramElement = elem.find('.diagram');\r\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\r\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    console.debug('found diagramContainer');\r\n    console.debug(diagramContainer);\r\n    elem.css('height', '100%');\r\n\r\n    var canvas = elem.find('.canvas')[0];\r\n    ctrl.canvas = canvas;\r\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n    function updateCanvasStyle() {\r\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n      var canvasContext = canvas.getContext(\"2d\");\r\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\r\n        var currentColor = ctrl.panel.colors[i];\r\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\r\n      }\r\n      canvasContext.fillStyle = grd;\r\n      canvasContext.fillRect(0, 0, canvas.width, 3);\r\n      ctrl.canvasContext = canvasContext;\r\n\r\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    }\r\n    updateCanvasStyle(); // run once at beginning so the gradients are ready on first data\r\n    \r\n    function selectElementById(container, id) {\r\n    \treturn d3.select(container.getElementById(id)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n    }\r\n    \r\n    function selectElementByEdgeLabel(container, id) {\r\n    \treturn d3.select(container).selectAll('span')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == id;\r\n\t    \t});\r\n    }\r\n\r\n    function selectDivElementByAlias(container, alias) {\r\n    \tvar targetElement = d3.select(container).selectAll('div')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == alias;\r\n\t    \t});\r\n    \tvar node = targetElement.node();\r\n    \tif (node != null) {\r\n    \t\tvar parentShape = $(node).closest('.node');\r\n    \t\tif (parentShape.length > 0) {\r\n    \t\t\treturn d3.select(parentShape[0]);\r\n    \t\t}     \t\t\r\n    \t}\r\n    \treturn d3.select();\r\n    }\r\n\r\n    function selectTextElementByAlias(container, alias) {\r\n    \treturn d3.select(container).selectAll('text')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == alias;\r\n\t    \t});\r\n    }\r\n    \r\n    function styleD3Shapes(targetElement, seriesItem) {\r\n    \tvar shapes = targetElement.selectAll('rect,circle,polygon');\r\n        shapes.style('fill', seriesItem.color);\r\n\r\n        var div = targetElement.select('div');\r\n        var fo = targetElement.select('foreignObject');\r\n        var p = div.append('p');\r\n        p.classed('diagram-value', true);\r\n        p.style('background-color', seriesItem.color);\r\n        p.html(seriesItem.valueFormatted);\r\n    }\r\n    \r\n    function styleFlowChartEdgeLabel(targetElement, seriesItem) {\r\n    \tvar edgeParent = d3.select(targetElement.node().parentNode);\r\n    \tedgeParent.append('br');\r\n        var v = edgeParent.append('span');\r\n        v.classed('diagram-value', true);\r\n        v.style('background-color', seriesItem.color);\r\n        v.html(seriesItem.valueFormatted);\r\n    }\r\n\r\n    function styleTextEdgeLabel(targetElement, seriesItem) {\r\n      targetElement.each(function() {\r\n        var el = this;\r\n        var markerBox = {\r\n          x: el.getBBox().x,\r\n          y: el.getBBox().y + el.getBBox().height + 10,\r\n          width: el.getBBox().width,\r\n          height: el.getBBox().height\r\n        };\r\n        var line = d3.select(el.parentNode).select('line');\r\n        d3.select(el.parentNode)\r\n          .insert(\"rect\")\r\n          .style('fill', seriesItem.color)\r\n          .attr(\"x\", markerBox.x)\r\n          .attr(\"y\", markerBox.y)\r\n          .attr(\"width\", markerBox.width)\r\n          .attr(\"height\", markerBox.height);\r\n        d3.select(el.parentNode)\r\n          .insert(\"text\")\r\n          .text(seriesItem.valueFormatted)\r\n          .attr(\"x\", markerBox.x + markerBox.width/2)\r\n          .attr(\"y\", markerBox.y + markerBox.height-1)\r\n          .attr(\"width\", markerBox.width)\r\n          .attr(\"height\", markerBox.height)\r\n          .style(\"text-anchor\", \"middle\");\r\n      });\r\n    }\r\n    \r\n    function injectCustomStyle(ctrl) {\r\n    \tvar diagramDiv = d3.select(document.getElementById(ctrl.panel.graphId));\r\n    \tvar diagramStyleElement = diagramDiv.append('style');\r\n    \tdiagramStyleElement.text(diagramStyleFormatter(ctrl.panel.styleValues));\r\n    \tvar customStyleElement = diagramDiv.append('style');\r\n    \tcustomStyleElement.text(ctrl.panel.style);\r\n    }\r\n\r\n    function updateStyle() {\r\n      var data = ctrl.svgData;\r\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n      console.debug('updating svg style');\r\n      var svg = $(document.getElementById(ctrl.panel.graphId));\r\n      if (ctrl.panel.maxWidth) {\r\n        $(svg).css('max-width', '100%');\r\n      }\r\n\r\n      if (svg[0] === undefined) {\r\n        return;\r\n      }\r\n\r\n      for (var key in data) {\r\n        var seriesItem = data[key];\r\n        \r\n        // Find nodes by ID if we can\r\n        //console.info('finding targetElement');\r\n        var targetElement = selectElementById(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n            styleD3Shapes(targetElement, seriesItem);\r\n            continue;\r\n        }\r\n        \r\n        targetElement = selectElementByEdgeLabel(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleFlowChartEdgeLabel(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n        \r\n        targetElement = selectDivElementByAlias(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleD3Shapes(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n\r\n        targetElement = selectTextElementByAlias(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleTextEdgeLabel(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n\r\n        console.debug('couldnt not find a diagram node with id/text: ' + key);\r\n      }\r\n      \r\n      injectCustomStyle(ctrl);\r\n    } // End updateStyle()\r\n\r\n     function render() {\r\n      updateCanvasStyle();\r\n      updateStyle();\r\n    }\r\n\r\n    this.events.on('render', function() {\r\n      render();\r\n      ctrl.renderingCompleted();\r\n    });\r\n  }\r\n  // End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n  console.debug('Getting color for value');\r\n  console.debug(data);\r\n  console.debug(value);\r\n  for (var i = data.thresholds.length; i > 0; i--) {\r\n    if (value >= data.thresholds[i - 1]) {\r\n      console.debug('Color['+(i-1)+']: ' + data.colorMap[i]);\r\n      return data.colorMap[i-1];\r\n      //return data.colorMap[i];\r\n    }\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent) {\r\n  var x = canvas.width * xPercent;\r\n  var context = canvas.getContext(\"2d\");\r\n  var p = context.getImageData(x, 1, 1, 1).data;\r\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\r\n  return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n  DiagramCtrl,\r\n  DiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}