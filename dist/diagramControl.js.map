{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","info","debug","i","thresholds","length","colorMap","_","first","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","panelDefaults","seriesOverrides","colors","legend","show","min","max","avg","current","total","maxDataPoints","mappingType","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","init","startOnLoad","logLevel","cloneCssStyles","htmlLabels","useMaxWidth","diagramMarginX","diagramMarginY","actorMargin","width","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","getDiagramContainer","html","addEditorTab","$","document","getElementById","_this","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","seriesData","datapoints","alias","target","replace","flotpairs","getFlotPairs","override","push","without","remove","svg","clearDiagram","graphDefinition","diagramContainer","renderCallback","svgCode","bindFunctions","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","valueFormatted","decimals","scaledDecimals","roundValue","color","colorData","seriesItemAlias","overrides","split","strVale","Number","trim","tmp","isNumber","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","ctrl","diagramElement","find","append","css","setElementHeight","updateStyle","renderingCompleted","key","targetElement","d3","select","selectAll","style","p","classed","parents","dElement","warn","parent","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {diagramEditor, displayEditor} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!'\r\n\r\nconst panelDefaults = {\r\n\t// other style overrides\r\n    seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n    valueMaps: [\r\n      { value: 'null', op: '=', text: 'N/A' }\r\n    ],\r\n    content: 'graph LR\\n' +\r\n\t\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t\t'A --> C(Round Rect)\\n' +\r\n\t\t'B --> D{Rhombus}\\n' +\r\n\t\t'C --> D\\n',\r\n\tinit: {\r\n\t\tstartOnLoad: false,\r\n\t\tlogLevel: 2, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    \tcloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n\t\tstartOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n\t\tarrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n\t\tflowchart: {\r\n\t\t\thtmlLabels: true,\r\n\t\t\tuseMaxWidth: true\r\n\t\t},\r\n\t\tsequenceDiagram: {\r\n\t\t\tdiagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n\t\t\tdiagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n\t\t\tactorMargin: 50, // - Margin between actors\r\n\t\t\twidth: 150, // - Width of actor boxes\r\n\t\t\theight: 65, // - Height of actor boxes00000000001111\r\n\t\t\tboxMargin: 10, // - Margin around l01oop boxes\r\n\t\t\tboxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n\t\t\tnoteMargin: 10, // - margin around notes\r\n\t\t\tmessageMargin: 35, // - Space between messages\r\n\t\t\tmirrorActors: true, // - mirror actors under diagram\r\n\t\t\tbottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n\t\t\tuseMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n\t\t},\r\n\t\tgantt: {\r\n\t\t\ttitleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n\t\t\tbarHeight: 20, // - the height of the bars in the graph\r\n\t\t\tbarGap: 4, // - the margin between the different activities in the gantt diagram\r\n\t\t\ttopPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n\t\t\tleftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n\t\t\tgridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n\t\t\tfontSize: 11, // - font size ...\r\n\t\t\tfontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n\t\t\tnumberSectionStyles: 3, // - the number of alternating section styles\r\n\t\t\t/** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n\t\t},\r\n\t\t//classDiagram: {},\r\n    \t//info: {}\r\n\t}\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\t\r\n\t\tthis.panel.graphId = 'diagram_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.graphId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.initializeMermaid();\r\n\t}\r\n\t\r\n\tinitializeMermaid(){\r\n\t\tmermaidAPI.initialize(this.panel.init);\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\t\r\n\thandleParseError(err, hash){\r\n\t\tthis.getDiagramContainer().html('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n\t}\r\n\t\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t}\r\n\t\r\n\tgetDiagramContainer(){\r\n\t\treturn $(document.getElementById(_this.containerDivId));\r\n\t}\r\n\t\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\t\tconsole.debug(this.series);\r\n\r\n\t\tvar data = {};\r\n\t\tthis.setValues(data);\r\n\t\tthis.updateDiagram(data);\r\n\t\tthis.svgData = data;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_')\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\t\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tclearDiagram(){\r\n\t\t$('#'+this.panel.graphId).remove();\r\n\t\tthis.svg = {};\r\n\t}\r\n\r\n\tupdateDiagram(data){\r\n\t\tif(this.panel.content.length > 0){\r\n\t\t\tthis.clearDiagram();\r\n\t\t\tvar _this = this;\r\n\t\t\tvar graphDefinition = this.panel.content;\r\n\t\t\tvar diagramContainer = $(document.getElementById(_this.containerDivId));\r\n\t\t\tvar renderCallback = function (svgCode, bindFunctions){\r\n\t\t\t\tif(svgCode == '') {\r\n\t\t\t\t\tdiagramContainer.html('There was a problem rendering the graph');\r\n\t\t\t\t} else {\r\n\t\t\t    \tdiagramContainer.html(svgCode);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tmermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\t}\r\n\t} // End updateDiagram()\r\n\t\r\n\tsetValues(data) {\r\n\t    if (this.series && this.series.length > 0) {\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar seriesItem = this.series[i];\r\n\t\t\t\tconsole.debug('setting values for series');\r\n\t\t\t\tconsole.debug(seriesItem);\r\n\t\t\t\tdata[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n\t\t\t\tvar lastPoint = _.last(seriesItem.datapoints);\r\n\t\t\t    var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\t\t\t\r\n\t\t\t\tif (this.panel.valueName === 'name') {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n\t\t\t\t} else if (_.isString(lastValue)) {\r\n\t\t\t        data[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n\t\t\t        //data[seriesItem.alias].flotpairs = seriesItem.flotpairs;\r\n\t\t\t\r\n\t\t\t        var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n\t\t\t        var formatFunc = kbn.valueFormats[this.panel.format];\r\n\t\t\t        data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t\t        data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n\t\t\t\t}\r\n\t\t\t\tdata[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t}\r\n\t    }\r\n\t} // End setValues()\r\n\t\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\t\t\tif (this.panel.seriesOverrides[i] && this.panel.seriesOverrides[i].alias == seriesItemAlias){\r\n\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors;\r\n\t\tseriesItem.colorData = colorData;\r\n\t\t\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\t\t\r\n\t\treturn seriesItem;\r\n\t}\r\n\t\r\n\tinvertColorOrder() {\r\n\t    var tmp = this.panel.colors[0];\r\n\t    this.panel.colors[0] = this.panel.colors[2];\r\n\t    this.panel.colors[2] = tmp;\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n\t    if (_.isNumber(this.panel.decimals)) {\r\n\t      return {decimals: this.panel.decimals, scaledDecimals: null};\r\n\t    }\r\n\r\n\t    var delta = value / 2;\r\n\t    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\t\r\n\t    var magn = Math.pow(10, -dec),\r\n\t      norm = delta / magn, // norm is between 1.0 and 10.0\r\n\t      size;\r\n\t\r\n\t    if (norm < 1.5) {\r\n\t      size = 1;\r\n\t    } else if (norm < 3) {\r\n\t      size = 2;\r\n\t      // special case for 2.5, requires an extra decimal\r\n\t      if (norm > 2.25) {\r\n\t        size = 2.5;\r\n\t        ++dec;\r\n\t      }\r\n\t    } else if (norm < 7.5) {\r\n\t      size = 5;\r\n\t    } else {\r\n\t      size = 10;\r\n\t    }\r\n\t\r\n\t    size *= magn;\r\n\t\r\n\t    // reduce starting decimals if not needed\r\n\t    if (Math.floor(value) === value) { dec = 0; }\r\n\t\r\n\t    var result = {};\r\n\t    result.decimals = Math.max(0, dec);\r\n\t    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\t\r\n\t    return result;\r\n\t}\r\n\t\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar diagramElement = elem.find('.diagram');\r\n\t\tdiagramElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found diagramContainer');\r\n    \tconsole.debug(diagramContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n    \t\r\n    \tfunction render(){\r\n    \t\tsetElementHeight();\r\n    \t\tupdateStyle();\r\n    \t}\r\n    \t\r\n    \tfunction setElementHeight() {\r\n\t      //diagramContainer.css('height', ctrl.height + 'px');\r\n\t    }\r\n    \t\r\n    \tthis.events.on('render', function() {\r\n\t\t\trender();\r\n\t\t\tctrl.renderingCompleted();\r\n\t    });\r\n\t    \r\n\t    function updateStyle(){\r\n\t    \tvar data = ctrl.svgData;\r\n\t    \tctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n\t\t\tconsole.info('updating svg style');\r\n\t\t\tvar svg = $(document.getElementById(ctrl.panel.graphId));\r\n\t\t\t$(svg).css('min-width', $(svg).css('max-width')); \r\n\t\t\t\r\n\t\t\tfor(var key in data){\r\n\t\t\t\tvar seriesItem = data[key];\r\n\t\t\t\t\r\n\t\t\t\t// Find nodes by ID if we can\r\n\t\t\t\tconsole.info('finding targetElement');\r\n\t\t\t\tvar targetElement = d3.select(document.getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n\t\t\t\t\r\n\t\t\t\tif(targetElement[0][0] !== null){ // probably a flowchart\r\n\t\t\t\t\ttargetElement.selectAll('rect,circle,poly').style('fill', seriesItem.color);\r\n\t\t\t\t\t// Add value text\r\n\t\t\t\t\tvar p = targetElement.select('div').append('div').append('p');\r\n\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.debug('finding element that contains text node: ' + key);\r\n\t\t\t\t\ttargetElement = $(svg).find('div:contains(\"'+key+'\")'); // maybe a flowchart with an alias text node\r\n\t\t\t\t\tif(targetElement.length > 0){\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('rect, circle, poly').css('fill', seriesItem.color);\r\n\t\t\t\t\t\tvar dElement = d3.select(targetElement[0]);\r\n\t\t\t\t\t\t // Add value text\r\n\t\t\t\t\t\tvar p = dElement.append('p');\r\n\t\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetElement = $(svg).find('text:contains(\"'+key+'\")'); // sequence diagram, gantt ?\r\n\t\t\t\t\t\tif(targetElement.length == 0){\r\n\t\t\t\t\t\t\tconsole.warn('couldnt not find a diagram node with id/text: ' + key);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttargetElement.parent().find('rect, circle, poly').css('fill', seriesItem.color);\r\n\t\t\t\t\t\ttargetElement.append('\\n' + seriesItem.valueFormatted);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconsole.debug(targetElement);\r\n\t\t\t\tconsole.info('set nodes:' + key + ' to color:' + seriesItem.color);\r\n\t\t\t}\r\n\t\t\t//return $(svg).html();\r\n\t\t} // End updateStyle()\r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i-1]) {\r\n\t\treturn data.colorMap[i];\r\n\t}\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tDiagramCtrl,\r\n\tDiagramCtrl as MetricsPanelCtrl\r\n};"]}