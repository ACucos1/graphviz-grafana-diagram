{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","mermaid","d3","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","mermaidAPI","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","moddedSeriesVal","format","valueName","valueOptions","valueMaps","op","text","content","mode","mermaidServiceUrl","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","svgData","updateDiagram","render","metricName","replacedText","replace","index","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramContainer","_this","renderCallback","svgCode","bindFunctions","html","templatedURL","scopedVars","method","url","headers","then","successCallback","response","clearDiagram","renderDiagram","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","name","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","nameOfMetric","getWorstSeries","showLowest","series1","series2","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","updateCanvasStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","selectElementById","container","select","selectElementByEdgeLabel","selectAll","filter","selectElementByAlias","targetElement","node","parentShape","closest","styleD3Shapes","shapes","style","div","fo","classed","styleEdgeLabel","edgeParent","parentNode","v","updateStyle","key","empty","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiuBA,WAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCC,YAAQC,KAAR,CAAc,yBAAd;AACAD,YAAQC,KAAR,CAAcH,IAAd;AACAE,YAAQC,KAAR,CAAcF,KAAd;AACA,SAAK,IAAIG,IAAIJ,KAAKK,UAAL,CAAgBC,MAA7B,EAAqCF,IAAI,CAAzC,EAA4CA,GAA5C,EAAiD;AAC/C,UAAIH,SAASD,KAAKK,UAAL,CAAgBD,IAAI,CAApB,CAAb,EAAqC;AACnCF,gBAAQC,KAAR,CAAc,YAAUC,IAAE,CAAZ,IAAe,KAAf,GAAuBJ,KAAKO,QAAL,CAAcH,CAAd,CAArC;AACA,eAAOJ,KAAKO,QAAL,CAAcH,IAAE,CAAhB,CAAP;AACA;AACD;AACF;AACD,WAAOI,EAAEC,KAAF,CAAQT,KAAKO,QAAb,CAAP;AACD;;AAED,WAASG,qBAAT,CAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAC/C,QAAIC,IAAIF,OAAOG,KAAP,GAAeF,QAAvB;AACA,QAAIG,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAd;AACA,QAAIC,IAAIF,QAAQG,YAAR,CAAqBL,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCb,IAAzC;AACA,QAAImB,QAAQ,UAAU,CAACF,EAAE,CAAF,IAAO,GAAP,GAAaA,EAAE,CAAF,CAAb,GAAoB,GAApB,GAA0BA,EAAE,CAAF,CAA1B,GAAiC,GAAjC,GAAuCA,EAAE,CAAF,CAAxC,CAAV,GAA0D,GAAtE;AACA,WAAOE,KAAP;AACD;;;;AArvBMC,a;;AACAC,Q;;AACAC,gB;;AACAC,S;;AAELC,sB,kBAAAA,gB;;AAGAC,mB,eAAAA,a;AACAC,mB,eAAAA,a;AACAC,qB,eAAAA,e;;AAEKnB,O;;;;;;;;;;;;;;;;;;;;;AAIDoB,gB,GAAaR,QAAQQ,U;AAErBC,mB,GAAgB;AACpBC,oBAAY,EADQ;AAEpBC,qCAA6B,EAFT;AAGpB;AACAC,yBAAiB,EAJG;AAKpB3B,oBAAY,MALQ;AAMpB4B,kBAAU,CANU,EAMP;AACbC,gBAAQ,CAAC,yBAAD,EAA4B,0BAA5B,EAAwD,wBAAxD,CAPY;AAQpBC,gBAAQ;AACNC,gBAAM,IADA;AAENC,eAAK,IAFC;AAGNC,eAAK,IAHC;AAINC,eAAK,IAJC;AAKNC,mBAAS,IALH;AAMNC,iBAAO,IAND;AAONC,oBAAU;AACRC,qBAAS,IADD;AAERP,kBAAM;AAFE;AAPJ,SARY;AAoBpBQ,uBAAe,GApBK;AAqBpBC,qBAAa,CArBO;AAsBpBC,kBAAU,KAtBU;AAuBpBC,uBAAe,WAvBK;AAwBpBC,yBAAiB,CAxBG;AAyBpBC,gBAAQ,MAzBY;AA0BpBC,mBAAW,KA1BS;AA2BpBC,sBAAc,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,SAA/B,CA3BM;AA4BpBC,mBAAW,CAAC;AACVnD,iBAAO,MADG;AAEVoD,cAAI,GAFM;AAGVC,gBAAM;AAHI,SAAD,CA5BS;AAiCpBC,iBAAS,eACP,+CADO,GAEP,uBAFO,GAGP,oBAHO,GAIP,WArCkB;AAsCpBC,cAAM,SAtCc,EAsCH;AACjBC,2BAAmB,EAvCC;AAwCpBC,cAAM;AACJC,oBAAU,CADN,EACS;AACbC,0BAAgB,KAFZ,EAEmB;AACvBC,uBAAa,KAHT,EAGgB;AACpBC,+BAAqB,IAJjB,EAIuB;AAC3BC,qBAAW;AACTC,wBAAY,IADH;AAETC,yBAAa;AAFJ,WALP;AASJC,2BAAiB;AACfC,4BAAgB,EADD,EACK;AACpBC,4BAAgB,EAFD,EAEK;AACpBC,yBAAa,EAHE,EAGE;AACjBvD,mBAAO,GAJQ,EAIH;AACZwD,oBAAQ,EALO,EAKH;AACZC,uBAAW,EANI,EAMA;AACfC,2BAAe,CAPA,EAOG;AAClBC,wBAAY,EARG,EAQC;AAChBC,2BAAe,EATA,EASI;AACnBC,0BAAc,IAVC,EAUK;AACpBC,6BAAiB,CAXF,EAWK;AACpBX,yBAAa,IAZE,CAYI;AAZJ,WATb;AAuBJY,iBAAO;AACLC,4BAAgB,EADX,EACe;AACpBC,uBAAW,EAFN,EAEU;AACfC,oBAAQ,CAHH,EAGM;AACXC,wBAAY,EAJP,EAIW;AAChBC,yBAAa,EALR,EAKY;AACjBC,kCAAsB,EANjB,EAMqB;AAC1BC,sBAAU,EAPL,EAOS;AACdC,wBAAY,2BARP,EAQoC;AACzCC,iCAAqB,CAThB,CASmB;AACxB;;;;;;;;;;;;;;;;;;;;;;AAVK;AAiCP;AACA;AAzDI;AAxCc,O;;yDAqGhBC,W;;;AACJ,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4C;AAAA;;AAAA,iIACpCH,MADoC,EAC5BC,SAD4B;;AAE1CjF,YAAEoF,QAAF,CAAW,OAAKC,KAAhB,EAAuBhE,aAAvB;AACA,iBAAK8D,KAAL,GAAaA,KAAb;AACA,iBAAKE,KAAL,CAAWC,OAAX,GAAqB,aAAa,OAAKD,KAAL,CAAWE,EAA7C;AACA,iBAAKC,cAAL,GAAsB,eAAe,OAAKH,KAAL,CAAWC,OAAhD;AACA,iBAAKJ,IAAL,GAAYA,IAAZ;AACA,iBAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKG,cAAL,CAAoBD,IAApB,QAArC;AACA,iBAAKE,WAAL,GAAmB/E,IAAIgF,cAAJ,EAAnB;AACA,iBAAKC,iBAAL;AAX0C;AAY3C;;;;8CAEmB;AAClB5E,uBAAW6E,UAAX,CAAsB,KAAKZ,KAAL,CAAWnC,IAAjC;AACA9B,uBAAW8E,UAAX,GAAwB,KAAKC,gBAAL,CAAsBP,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;2CAEgBQ,G,EAAKC,I,EAAM;AAC1B,iBAAKC,KAAL,GAAa,oCAAb;AACA,iBAAKC,SAAL,GAAiB,KAAKrB,IAAL,CAAUsB,WAAV,CAAsB,oCAAoCJ,GAApC,GAA0C,QAAhE,CAAjB;AACD;;;2CAEgB;AACf,iBAAKK,YAAL,CAAkB,SAAlB,EAA6BxF,aAA7B,EAA4C,CAA5C;AACA,iBAAKwF,YAAL,CAAkB,SAAlB,EAA6BvF,aAA7B,EAA4C,CAA5C;AACA,iBAAKuF,YAAL,CAAkB,mBAAlB,EAAuCtF,eAAvC,EAAwD,CAAxD;AACD;;;gDAEqB;AACpB,mBAAOuF,EAAEC,SAASC,cAAT,CAAwB,KAAKpB,cAA7B,CAAF,CAAP;AACD;;;yCAEcqB,Q,EAAU;AACvBnH,oBAAQC,KAAR,CAAc,eAAd;AACAD,oBAAQC,KAAR,CAAckH,QAAd;AACA,iBAAKC,MAAL,GAAcD,SAASE,GAAT,CAAa,KAAKC,aAAL,CAAmBpB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACAlG,oBAAQC,KAAR,CAAc,2BAAd;AACAD,oBAAQC,KAAR,CAAc,KAAKmH,MAAnB;AACA,gBAAItH,OAAO,KAAKyH,SAAL,EAAX;AACA;AACA,iBAAKC,OAAL,GAAe1H,IAAf;AACA,iBAAK2H,aAAL,CAAmB3H,IAAnB;AACA,iBAAK4H,MAAL;AACD;;;kDAEuBC,U,EAAY;AAClC;AACA,gBAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC,OAAO,uCAAP;AACpC,gBAAIC,eAAeD,WAAWE,OAAX,CAAmB,gBAAnB,EAAqC,GAArC,CAAnB;AACA,iBAAK,IAAIC,KAAT,IAAkB,KAAKnC,KAAL,CAAW9D,2BAA7B,EAA0D;AACxD,kBAAIkG,cAAc,KAAKpC,KAAL,CAAW9D,2BAAX,CAAuCiG,KAAvC,CAAlB;AACA;AACA,kBAAIE,UAAUD,YAAYE,kBAA1B;AACA;AACA,kBAAID,QAAQ5H,MAAR,KAAmB,CAAvB,EAA0B;AAC1B;AACA,kBAAI4H,QAAQ,CAAR,MAAe,GAAnB,EAAwB;AACtBA,0BAAU3G,IAAI6G,eAAJ,CAAoBH,YAAYE,kBAAhC,CAAV;AACD;AACDL,6BAAeA,aAAaC,OAAb,CACbG,OADa,EAEbD,YAAYI,eAFC,CAAf;AAID;AACD,mBAAOP,YAAP;AACD;;;wCAEaQ,U,EAAY;AACxB,gBAAIC,QAAQ,KAAKC,uBAAL,CAA6BF,WAAWG,MAAxC,CAAZ;AACA,gBAAInB,SAAS,IAAIhG,UAAJ,CAAe;AAC1BoH,0BAAYJ,WAAWI,UADG;AAE1BH,qBAAOA,KAFmB;AAG1BI,oBAAML,WAAWK;AAHS,aAAf,CAAb;AAKArB,mBAAOsB,SAAP,GAAmBtB,OAAOuB,YAAP,CAAoB,KAAKhD,KAAL,CAAW9C,aAA/B,CAAnB;AACA,gBAAI2F,aAAaJ,WAAWI,UAAX,IAAyB,EAA1C;AACA,gBAAIA,cAAcA,WAAWpI,MAAX,GAAoB,CAAtC,EAAyC;AACvC,kBAAIwI,OAAOJ,WAAWA,WAAWpI,MAAX,GAAoB,CAA/B,EAAkC,CAAlC,CAAX;AACA,kBAAIyI,OAAO,KAAKC,KAAL,CAAWD,IAAtB;AACA,kBAAID,OAAOC,IAAP,GAAc,CAAC,KAAnB,EAA0B;AACxBzB,uBAAO2B,cAAP,GAAwB,IAAxB;AACD;AACF;AACD,mBAAO3B,MAAP;AACD;;;4CAEiB4B,Q,EAAU;AAC1B,iBAAKrD,KAAL,CAAW7D,eAAX,CAA2BmH,IAA3B,CAAgCD,YAAY,EAA5C;AACD;;;+CAEoBA,Q,EAAU;AAC7B,iBAAKrD,KAAL,CAAW7D,eAAX,GAA6BxB,EAAE4I,OAAF,CAAU,KAAKvD,KAAL,CAAW7D,eAArB,EAAsCkH,QAAtC,CAA7B;AACA,iBAAKG,OAAL;AACD;;;uCAEYC,S,EAAW;AACtB,iBAAKzD,KAAL,CAAW/D,UAAX,CAAsBqH,IAAtB,CAA2BG,aAAa,EAAxC;AACD;;;0CACeA,S,EAAW;AACzB,iBAAKzD,KAAL,CAAW/D,UAAX,GAAwBtB,EAAE4I,OAAF,CAAU,KAAKvD,KAAL,CAAW/D,UAArB,EAAiCwH,SAAjC,CAAxB;AACA,iBAAKD,OAAL;AACD;;;wDAC6B;AAC5B,mBAAO7I,EAAE+G,GAAF,CAAM,KAAK/B,MAAL,CAAY+D,IAAZ,CAAiBjC,MAAvB,EAA+B,UAASA,MAAT,EAAiB;AACrD,qBAAOA,OAAOiB,KAAd;AACD,aAFM,CAAP;AAGD;;;+CAEoBe,S,EAAW;AAC9B,gBAAIA,UAAUE,OAAV,KAAsBC,SAA1B,EAAqC;AACnCH,wBAAUE,OAAV,GAAoB,CAAC,EAAD,CAApB;AACD,aAFD,MAEO;AACLF,wBAAUE,OAAV,CAAkBL,IAAlB,CAAuB,EAAvB;AACD;AACD,iBAAKE,OAAL;AACD;;;oDACyBC,S,EAAWI,M,EAAQ;AAC3CJ,sBAAUE,OAAV,GAAoBhJ,EAAE4I,OAAF,CAAUE,UAAUE,OAApB,EAA6BE,MAA7B,CAApB;AACA,iBAAKL,OAAL;AACD;;;wDAE6BpB,W,EAAa;AACzC,iBAAKpC,KAAL,CAAW9D,2BAAX,CAAuCoH,IAAvC,CAA4ClB,eAAe;AACzDE,kCAAoB,EADqC;AAEzDE,+BAAiB;AAFwC,aAA3D;AAID;;;2DACgCJ,W,EAAa;AAC5C,iBAAKpC,KAAL,CAAW9D,2BAAX,GAAyCvB,EAAE4I,OAAF,CAAU,KAAKvD,KAAL,CAAW9D,2BAArB,EAAkDkG,WAAlD,CAAzC;AACA,iBAAKoB,OAAL;AACD;;;6CAEkB;AACjB,gBAAIM,iBAAiB,KAAK9D,KAAL,CAAWxF,UAAX,CAAsBC,MAA3C;AACA,gBAAIsJ,aAAa,KAAK/D,KAAL,CAAW3D,MAAX,CAAkB5B,MAAnC;AACA,iBAAK+I,OAAL;AACD;;;sCAEWQ,U,EAAY1I,K,EAAO;AAC7B,iBAAK0E,KAAL,CAAW3D,MAAX,CAAkB2H,UAAlB,IAAgC1I,KAAhC;AACD;;;sCAEW0I,U,EAAY;AACtB,iBAAKhE,KAAL,CAAW3D,MAAX,CAAkB4H,MAAlB,CAAyBD,UAAzB,EAAqC,CAArC;AACD;;;qCAEU;AACT,iBAAKhE,KAAL,CAAW3D,MAAX,CAAkBiH,IAAlB,CAAuB,wBAAvB;AACD;;;wCAEaY,O,EAAS;AACrB,iBAAKlE,KAAL,CAAW5C,MAAX,GAAoB8G,QAAQ9J,KAA5B;AACA,iBAAKoJ,OAAL;AACD;;;yCAEc;AACb,gBAAInC,EAAE,MAAI,KAAKrB,KAAL,CAAWC,OAAjB,EAA0BxF,MAA9B,EAAsC;AACpC4G,gBAAE,MAAM,KAAKrB,KAAL,CAAWC,OAAnB,EAA4BkE,MAA5B;AACD;AACD,iBAAKC,GAAL,GAAW,EAAX;AACD;;;wCAEaC,e,EAAiBlK,I,EAAM;AACnC;AACA;AACA;AACA;AACAkK,8BAAkB,KAAKC,8BAAL,CAAoCD,eAApC,EAAqDlK,IAArD,CAAlB;AACAkK,8BAAkB,KAAKE,WAAL,CAAiB/B,eAAjB,CAAiC6B,eAAjC,CAAlB;AACA,gBAAIG,mBAAmBnD,EAAEC,SAASC,cAAT,CAAwB,KAAKpB,cAA7B,CAAF,CAAvB;AACA,gBAAIsE,QAAQ,IAAZ;AACA,gBAAIC,iBAAiB,SAAjBA,cAAiB,CAASC,OAAT,EAAkBC,aAAlB,EAAiC;AACpD,kBAAID,YAAY,EAAhB,EAAoB;AAClBH,iCAAiBK,IAAjB,CAAsB,yCAAtB;AACD,eAFD,MAEO;AACLL,iCAAiBK,IAAjB,CAAsBF,OAAtB;AACAC,8BAAcJ,iBAAiB,CAAjB,CAAd;AACAnK,wBAAQC,KAAR,CAAc,wCAAd;AACA;AACAmK,sBAAM5C,OAAN,GAAgB1H,IAAhB;AACA;AACAsK,sBAAM1C,MAAN;AACD;AACF,aAZD;AAaA;AACAhG,uBAAWgG,MAAX,CAAkB,KAAK/B,KAAL,CAAWC,OAA7B,EAAsCoE,eAAtC,EAAuDK,cAAvD;AACD;;;wCAEavK,I,EAAM;AAClB,gBAAI,KAAK6F,KAAL,CAAWtC,OAAX,CAAmBjD,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAIkD,OAAO,KAAKqC,KAAL,CAAWrC,IAAtB;AACA,kBAAIA,QAAQ,KAAZ,EAAmB;AACjB,oBAAImH,eAAe,KAAKP,WAAL,CAAiBrC,OAAjB,CAAyB,KAAKlC,KAAL,CAAWpC,iBAApC,EAAuD,KAAKoC,KAAL,CAAW+E,UAAlE,CAAnB;AACA,oBAAIN,QAAQ,IAAZ;AACA,qBAAK3E,KAAL,CAAW;AACTkF,0BAAQ,KADC;AAETC,uBAAKH,YAFI;AAGTI,2BAAS,EAAE,UAAU,2CAAZ;AAHA,iBAAX,EAIGC,IAJH,CAIQ,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACzC;AACA;AACAZ,wBAAMa,YAAN;AACAb,wBAAMc,aAAN,CAAoBF,SAASlL,IAA7B,EAAmCA,IAAnC;AACD,iBATD,EASG,SAASqL,aAAT,CAAuBH,QAAvB,EAAiC;AAClChL,0BAAQoL,IAAR,CAAa,OAAb,EAAsBJ,QAAtB;AACD,iBAXD;AAYD,eAfD,MAeO;AACL,qBAAKC,YAAL;AACA,qBAAKC,aAAL,CAAmB,KAAKvF,KAAL,CAAWtC,OAA9B,EAAuCvD,IAAvC;AACD;AACF;AACF;;;yDAwB8BkK,e,EAAiBlK,I,EAAM;AACpD;AACA;AACA,gBAAIuL,UAAUrB,gBAAgBsB,KAAhB,CAAsB,mBAAtB,CAAd;AACA,gBAAID,YAAY,IAAhB,EAAsB,OAAOrB,eAAP;AACtB;AACA,iBAAK,IAAI9J,IAAI,CAAb,EAAgBA,IAAImL,QAAQjL,MAA5B,EAAoCF,GAApC,EAAyC;AACvC,kBAAIqL,SAASF,QAAQnL,CAAR,CAAb;AACA,kBAAIsL,YAAYD,OAAO,CAAP,CAAhB;AACAA,uBAASA,OAAOE,SAAP,CAAiB,CAAjB,CAAT;AACA;AACA,mBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAK/F,KAAL,CAAW/D,UAAX,CAAsBxB,MAA1C,EAAkDsL,GAAlD,EAAuD;AACrD,oBAAIC,aAAa,KAAKhG,KAAL,CAAW/D,UAAX,CAAsB8J,CAAtB,CAAjB;AACA,oBAAIC,WAAWC,IAAX,KAAoBL,MAAxB,EAAgC;AAC9B;AACA,sBAAIM,iBAAiB,IAArB;AACA,0BAAQL,SAAR;AACE,yBAAK,GAAL;AACEK,uCAAiB/L,KAAK6L,WAAWC,IAAhB,EAAsB7L,KAAvC;AACAiK,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB/L,KAAK6L,WAAWC,IAAhB,EAAsBE,2BAAvC;AACA9B,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB/L,KAAK6L,WAAWC,IAAhB,EAAsBG,cAAvC;AACA/B,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB/L,KAAK6L,WAAWC,IAAhB,EAAsBI,wBAAvC;AACAhC,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AAhBJ;AAkBD;AACF;AACD;AACA,mBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAK7E,MAAL,CAAYhH,MAAhC,EAAwC6L,GAAxC,EAA6C;AAC3C,oBAAIC,aAAa,KAAK9E,MAAL,CAAY6E,CAAZ,CAAjB;AACA,oBAAIC,WAAW7D,KAAX,KAAqBkD,MAAzB,EAAiC;AAC/B,sBAAIM,iBAAiB,IAArB;AACA,0BAAQL,SAAR;AACE,yBAAK,GAAL;AACEK,uCAAiB/L,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAxC;AACAiK,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB/L,KAAKoM,WAAW7D,KAAhB,EAAuB0D,cAAxC;AACA/B,wCAAkBA,gBAAgBnC,OAAhB,CAAwB,MAAM0D,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AARJ;AAUD;AACF;AACF;AACD,mBAAO7B,eAAP;AACD;;;sCAEW;AACV,gBAAIlK,OAAO,EAAX;AACA,gBAAI,KAAKsH,MAAL,IAAe,KAAKA,MAAL,CAAYhH,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAI,KAAKkH,MAAL,CAAYhH,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3C,oBAAIgM,aAAa,KAAK9E,MAAL,CAAYlH,CAAZ,CAAjB;AACAF,wBAAQC,KAAR,CAAc,2BAAd;AACAD,wBAAQC,KAAR,CAAciM,UAAd;AACApM,qBAAKoM,WAAW7D,KAAhB,IAAyB,KAAK8D,cAAL,CAAoBD,WAAW7D,KAA/B,CAAzB;AACA,oBAAI+D,YAAY9L,EAAEsI,IAAF,CAAOsD,WAAW1D,UAAlB,CAAhB;AACA,oBAAI6D,YAAY/L,EAAEgM,OAAF,CAAUF,SAAV,IAAuBA,UAAU,CAAV,CAAvB,GAAsC,IAAtD;;AAEA,oBAAI,KAAKzG,KAAL,CAAW3C,SAAX,KAAyB,MAA7B,EAAqC;AACnClD,uBAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAvB,GAA+B,CAA/B;AACAD,uBAAKoM,WAAW7D,KAAhB,EAAuBkE,YAAvB,GAAsC,CAAtC;AACAzM,uBAAKoM,WAAW7D,KAAhB,EAAuBmE,aAAvB,GAAuCN,WAAW7D,KAAlD;AACD,iBAJD,MAIO,IAAI/H,EAAEmM,QAAF,CAAWJ,SAAX,CAAJ,EAA2B;AAChCvM,uBAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAvB,GAA+B,CAA/B;AACAD,uBAAKoM,WAAW7D,KAAhB,EAAuBmE,aAAvB,GAAuClM,EAAEoM,MAAF,CAASL,SAAT,CAAvC;AACAvM,uBAAKoM,WAAW7D,KAAhB,EAAuBkE,YAAvB,GAAsC,CAAtC;AACD,iBAJM,MAIA;AACLzM,uBAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAvB,GAA+BmM,WAAWS,KAAX,CAAiB7M,KAAKoM,WAAW7D,KAAhB,EAAuBrF,SAAxC,CAA/B;AACA,sBAAI4J,cAAc,KAAKC,mBAAL,CAAyB/M,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAhD,CAAlB;AACA,sBAAI+M,aAAazL,IAAI0L,YAAJ,CAAiBjN,KAAKoM,WAAW7D,KAAhB,EAAuBtF,MAAxC,CAAjB;AACA;AACAjD,uBAAKoM,WAAW7D,KAAhB,EAAuB0D,cAAvB,GAAwCe,WAAWhN,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAlC,EAAyC6M,YAAY7K,QAArD,EAA+D6K,YAAYI,cAA3E,CAAxC;AACAlN,uBAAKoM,WAAW7D,KAAhB,EAAuBkE,YAAvB,GAAsClL,IAAI4L,UAAJ,CAAenN,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAtC,EAA6C6M,YAAY7K,QAAzD,CAAtC;AACD;AACD,oBAAI,KAAK4D,KAAL,CAAW1D,MAAX,CAAkBO,QAAlB,CAA2BC,OAA/B,EAAwC;AACtC3C,uBAAKoM,WAAW7D,KAAhB,EAAuBpH,KAAvB,GAA+B,KAAKiM,mBAAL,CAAyBpN,KAAKoM,WAAW7D,KAAhB,EAAuB8E,SAAhD,EAA2DrN,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAAlF,CAA/B;AACD,iBAFD,MAEO;AACLD,uBAAKoM,WAAW7D,KAAhB,EAAuBpH,KAAvB,GAA+BpB,iBAAiBC,KAAKoM,WAAW7D,KAAhB,EAAuB8E,SAAxC,EAAmDrN,KAAKoM,WAAW7D,KAAhB,EAAuBtI,KAA1E,CAA/B;AACD;AACF;AACF;AACD;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,KAAKyF,KAAL,CAAW/D,UAAX,CAAsBxB,MAA1C,EAAkDF,GAAlD,EAAuD;AACrD,kBAAIyL,aAAa,KAAKhG,KAAL,CAAW/D,UAAX,CAAsB1B,CAAtB,CAAjB;AACA,kBAAIkN,qBAAqB,IAAzB;AACA,kBAAIC,yBAAyB,IAA7B;AACA,mBAAK,IAAI3B,IAAI,CAAb,EAAgBA,IAAIC,WAAWrC,OAAX,CAAmBlJ,MAAvC,EAA+CsL,GAA/C,EAAoD;AAClD,oBAAI4B,UAAU3B,WAAWrC,OAAX,CAAmBoC,CAAnB,CAAd;AACA,oBAAI6B,aAAaD,QAAQC,UAAzB;AACA;AACAvN,wBAAQC,KAAR,CAAc,oBAAoBiM,WAAWH,cAA7C;AACA/L,wBAAQC,KAAR,CAAc,cAAcsN,UAA5B;AACA;AACA,oBAAI,CAACzN,KAAK0N,cAAL,CAAoBD,UAApB,CAAL,EAAsC;AACtC,oBAAIrB,aAAapM,KAAKyN,UAAL,CAAjB;AACA;AACArB,2BAAWuB,YAAX,GAA0BF,UAA1B;AACA;AACA,oBAAIH,uBAAuB,IAA3B,EAAiC;AAC/BA,uCAAqBlB,UAArB;AACAmB,2CAAyBnB,WAAWuB,YAApC;AACD,iBAHD,MAGO;AACLL,uCAAqB,KAAKM,cAAL,CAAoBN,kBAApB,EAAwClB,UAAxC,EAAoDP,WAAWgC,UAA/D,CAArB;AACAN,2CAAyBnB,WAAWuB,YAApC;AACD;AACD,uBAAOvB,WAAWuB,YAAlB;AACD;AACD;AACA,kBAAIL,uBAAuB,IAA3B,EAAiC;AAC/BA,mCAAmBpB,wBAAnB,GAA8CqB,yBAAyB,IAAzB,GAAgCD,mBAAmBrB,cAAjG;AACAqB,mCAAmBtB,2BAAnB,GAAiDuB,yBAAyB,IAAzB,GAAgCD,mBAAmBrN,KAApG;AACAqN,mCAAmBrB,cAAnB,GAAoCsB,yBAAyB,IAAzB,GAAgCD,mBAAmBrB,cAAvF;AACA;AACAjM,qBAAK6L,WAAWC,IAAhB,IAAwBwB,kBAAxB;AACD;AACF;AACD,mBAAOtN,IAAP;AACD;;;yCAEc8N,O,EAASC,O,EAASF,U,EAAY;AAC3C,gBAAIA,UAAJ,EAAgB;AACf;AACA,qBAAOC,QAAQ7N,KAAR,GAAgB8N,QAAQ9N,KAAxB,GAAgC6N,OAAhC,GAA0CC,OAAjD;AACA,aAHD,MAGO;AACN;AACA,qBAAOD,QAAQ7N,KAAR,GAAgB8N,QAAQ9N,KAAxB,GAAgC6N,OAAhC,GAA0CC,OAAjD;AACA;AACF;;;8CAEmB/N,I,EAAMC,K,EAAO;AAC/BC,oBAAQC,KAAR,CAAc,4BAAd;AACAD,oBAAQC,KAAR,CAAcH,IAAd;AACAE,oBAAQC,KAAR,CAAcF,KAAd;AACA,gBAAIoC,MAAM2L,KAAK3L,GAAL,CAAS4L,KAAT,CAAeD,IAAf,EAAqBhO,KAAKK,UAA1B,CAAV;AACA,gBAAIiC,MAAM0L,KAAK1L,GAAL,CAAS2L,KAAT,CAAeD,IAAf,EAAqBhO,KAAKK,UAA1B,CAAV;AACA,gBAAI6N,mBAAmB5L,MAAMD,GAA7B;AACA,gBAAI8L,uBAAuBlO,QAAQoC,GAAnC;AACA,gBAAIzB,WAAWuN,uBAAuBD,gBAAtC;AACA;AACAtN,uBAAWoN,KAAK3L,GAAL,CAAS,KAAT,EAAgBzB,QAAhB,CAAX;AACA;AACAA,uBAAWoN,KAAK1L,GAAL,CAAS,KAAT,EAAgB1B,QAAhB,CAAX;AACA,gBAAIZ,KAAKoO,YAAT,EAAuB;AACrBxN,yBAAW,IAAIA,QAAf;AACD;;AAED,mBAAOF,sBAAsB,KAAKC,MAA3B,EAAmCC,QAAnC,CAAP;AACD;;;yCAEcyN,e,EAAiB;AAC9B,gBAAIjC,aAAa,EAAjB;AAAA,gBACEiB,YAAY,EADd;AAAA,gBAEEiB,YAAY,EAFd;;AAIApO,oBAAQC,KAAR,CAAc,mCAAd;AACAD,oBAAQC,KAAR,CAAckO,eAAd;AACAnO,oBAAQC,KAAR,CAAc,KAAK0F,KAAL,CAAW7D,eAAzB;AACA,iBAAK,IAAI5B,IAAI,CAAb,EAAgBA,IAAI,KAAKyF,KAAL,CAAW7D,eAAX,CAA2B1B,MAA/C,EAAuDF,GAAvD,EAA4D;AAC1DF,sBAAQC,KAAR,CAAc,YAAd;AACAD,sBAAQC,KAAR,CAAc,KAAK0F,KAAL,CAAW7D,eAAX,CAA2B5B,CAA3B,CAAd;;AAEA,kBAAI,KAAKyF,KAAL,CAAW7D,eAAX,CAA2B5B,CAA3B,CAAJ,EAAmC;AACjC,oBAAImO,QAAQhN,IAAI6G,eAAJ,CAAoB,KAAKvC,KAAL,CAAW7D,eAAX,CAA2B5B,CAA3B,EAA8BmI,KAAlD,CAAZ;AACA,oBAAIgD,UAAU8C,gBAAgB7C,KAAhB,CAAsB+C,KAAtB,CAAd;AACA,oBAAIhD,WAAWA,QAAQjL,MAAR,GAAiB,CAAhC,EAAmC;AACjCgO,8BAAY,KAAKzI,KAAL,CAAW7D,eAAX,CAA2B5B,CAA3B,CAAZ;AACD;AACF;AACF;AACDiN,sBAAUhN,UAAV,GAAuB,CAACiO,UAAUjO,UAAV,IAAwB,KAAKwF,KAAL,CAAWxF,UAApC,EAAgDmO,KAAhD,CAAsD,GAAtD,EAA2DjH,GAA3D,CAA+D,UAASkH,OAAT,EAAkB;AACtG,qBAAOC,OAAOD,QAAQE,IAAR,EAAP,CAAP;AACD,aAFsB,CAAvB;AAGAtB,sBAAU9M,QAAV,GAAqB,KAAKsF,KAAL,CAAW3D,MAAX,CAAkB0M,KAAlB,EAArB;AACAvB,sBAAUe,YAAV,GAAyBE,UAAUF,YAAV,IAA0B,KAAnD;AACA,gBAAIf,UAAUe,YAAd,EAA4B;AAC1Bf,wBAAU9M,QAAV,CAAmBsO,OAAnB;AACD;AACDzC,uBAAWiB,SAAX,GAAuBA,SAAvB;;AAEAjB,uBAAWlJ,SAAX,GAAuBoL,UAAUpL,SAAV,IAAuB,KAAK2C,KAAL,CAAW3C,SAAzD;;AAEAkJ,uBAAWnJ,MAAX,GAAoBqL,UAAUQ,UAAV,IAAwB,KAAKjJ,KAAL,CAAW5C,MAAvD;AACA,mBAAOmJ,UAAP;AACD;;;6CAEkB;AACjB,iBAAKvG,KAAL,CAAW3D,MAAX,CAAkB2M,OAAlB;AACA,iBAAKxF,OAAL;AACD;;;8CAEmBpJ,K,EAAO;AACzB,gBAAIO,EAAEuO,QAAF,CAAW,KAAKlJ,KAAL,CAAW5D,QAAtB,CAAJ,EAAqC;AACnC,qBAAO;AACLA,0BAAU,KAAK4D,KAAL,CAAW5D,QADhB;AAELiL,gCAAgB;AAFX,eAAP;AAID;;AAED,gBAAI8B,QAAQ/O,QAAQ,CAApB;AACA,gBAAIgP,MAAM,CAACjB,KAAKkB,KAAL,CAAWlB,KAAKmB,GAAL,CAASH,KAAT,IAAkBhB,KAAKoB,IAAlC,CAAX;;AAEA,gBAAIC,OAAOrB,KAAKsB,GAAL,CAAS,EAAT,EAAa,CAACL,GAAd,CAAX;AAAA,gBACEM,OAAOP,QAAQK,IADjB;AAAA,gBACuB;AACrBG,gBAFF;;AAIA,gBAAID,OAAO,GAAX,EAAgB;AACdC,qBAAO,CAAP;AACD,aAFD,MAEO,IAAID,OAAO,CAAX,EAAc;AACnBC,qBAAO,CAAP;AACA;AACA,kBAAID,OAAO,IAAX,EAAiB;AACfC,uBAAO,GAAP;AACA,kBAAEP,GAAF;AACD;AACF,aAPM,MAOA,IAAIM,OAAO,GAAX,EAAgB;AACrBC,qBAAO,CAAP;AACD,aAFM,MAEA;AACLA,qBAAO,EAAP;AACD;;AAEDA,oBAAQH,IAAR;;AAEA;AACA,gBAAIrB,KAAKkB,KAAL,CAAWjP,KAAX,MAAsBA,KAA1B,EAAiC;AAC/BgP,oBAAM,CAAN;AACD;;AAED,gBAAIQ,SAAS,EAAb;AACAA,mBAAOxN,QAAP,GAAkB+L,KAAK1L,GAAL,CAAS,CAAT,EAAY2M,GAAZ,CAAlB;AACAQ,mBAAOvC,cAAP,GAAwBuC,OAAOxN,QAAP,GAAkB+L,KAAKkB,KAAL,CAAWlB,KAAKmB,GAAL,CAASK,IAAT,IAAiBxB,KAAKoB,IAAjC,CAAlB,GAA2D,CAAnF;;AAEA,mBAAOK,MAAP;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOrG,I,EAAM;AAC7B,gBAAIa,cAAc,KAAKA,WAAvB;AACA,gBAAIyF,iBAAiBF,KAAKG,IAAL,CAAU,UAAV,CAArB;AACAD,2BAAeE,MAAf,CAAsB,cAAcxG,KAAKvD,cAAnB,GAAoC,UAA1D;AACA,gBAAIqE,mBAAmBnD,EAAEC,SAASC,cAAT,CAAwBmC,KAAKvD,cAA7B,CAAF,CAAvB;AACA9F,oBAAQC,KAAR,CAAc,wBAAd;AACAD,oBAAQC,KAAR,CAAckK,gBAAd;AACAsF,iBAAKK,GAAL,CAAS,QAAT,EAAmB,MAAnB;;AAEA,gBAAIrP,SAASgP,KAAKG,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAb;AACAvG,iBAAK5I,MAAL,GAAcA,MAAd;AACA,gBAAIsP,mBAAmBN,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;AACA,gBAAII,mBAAmBP,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;;AAEA,qBAASK,iBAAT,GAA6B;AAC3BxP,qBAAOG,KAAP,GAAekN,KAAK1L,GAAL,CAASuN,eAAe,CAAf,EAAkBO,WAA3B,EAAwC,GAAxC,CAAf;AACA,kBAAIC,gBAAgB1P,OAAOK,UAAP,CAAkB,IAAlB,CAApB;AACAqP,4BAAcC,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B3P,OAAOG,KAArC,EAA4CH,OAAO2D,MAAnD;;AAEA,kBAAIiM,MAAMF,cAAcG,oBAAd,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC7P,OAAOG,KAAhD,EAAuD,CAAvD,CAAV;AACA,kBAAI2P,aAAa,IAAIzC,KAAK1L,GAAL,CAASiH,KAAK1D,KAAL,CAAW3D,MAAX,CAAkB5B,MAA3B,EAAmC,CAAnC,CAArB;AACA,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAImJ,KAAK1D,KAAL,CAAW3D,MAAX,CAAkB5B,MAAtC,EAA8CF,GAA9C,EAAmD;AACjD,oBAAIsQ,eAAenH,KAAK1D,KAAL,CAAW3D,MAAX,CAAkB9B,CAAlB,CAAnB;AACAmQ,oBAAII,YAAJ,CAAiB3C,KAAK3L,GAAL,CAASoO,aAAarQ,CAAtB,EAAyB,CAAzB,CAAjB,EAA8CsQ,YAA9C;AACD;AACDL,4BAAcO,SAAd,GAA0BL,GAA1B;AACAF,4BAAcQ,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BlQ,OAAOG,KAApC,EAA2C,CAA3C;AACAyI,mBAAK8G,aAAL,GAAqBA,aAArB;;AAEAJ,+BAAiBa,SAAjB,GAA6B9C,KAAK1L,GAAL,CAAS2L,KAAT,CAAeD,IAAf,EAAqBzE,KAAK1D,KAAL,CAAWxF,UAAX,CAAsBmO,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACA0B,+BAAiBY,SAAjB,GAA6B9C,KAAK3L,GAAL,CAAS4L,KAAT,CAAeD,IAAf,EAAqBzE,KAAK1D,KAAL,CAAWxF,UAAX,CAAsBmO,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACD;AACD2B,gCAhC6B,CAgCR;;AAErB,qBAASY,iBAAT,CAA2BC,SAA3B,EAAsCjL,EAAtC,EAA0C;AACzC,qBAAO1E,GAAG4P,MAAH,CAAUD,UAAU5J,cAAV,CAAyBrB,EAAzB,CAAV,CAAP,CADyC,CACO;AAChD;;AAED,qBAASmL,wBAAT,CAAkCF,SAAlC,EAA6CjL,EAA7C,EAAiD;AAChD,qBAAO1E,GAAG4P,MAAH,CAAUD,SAAV,EAAqBG,SAArB,CAA+B,MAA/B,EACLC,MADK,CACE,YAAU;AACpB,uBAAO/P,GAAG4P,MAAH,CAAU,IAAV,EAAgB3N,IAAhB,MAA0ByC,EAAjC;AACG,eAHK,CAAP;AAIA;;AAED,qBAASsL,oBAAT,CAA8BL,SAA9B,EAAyCzI,KAAzC,EAAgD;AAC/C,kBAAI+I,gBAAgBjQ,GAAG4P,MAAH,CAAUD,SAAV,EAAqBG,SAArB,CAA+B,KAA/B,EAClBC,MADkB,CACX,YAAU;AACpB,uBAAO/P,GAAG4P,MAAH,CAAU,IAAV,EAAgB3N,IAAhB,MAA0BiF,KAAjC;AACG,eAHkB,CAApB;AAIA,kBAAIgJ,OAAOD,cAAcC,IAAd,EAAX;AACA,kBAAIA,QAAQ,IAAZ,EAAkB;AACjB,oBAAIC,cAActK,EAAEqK,IAAF,EAAQE,OAAR,CAAgB,OAAhB,CAAlB;AACA,oBAAID,YAAYlR,MAAZ,GAAqB,CAAzB,EAA4B;AAC3B,yBAAOe,GAAG4P,MAAH,CAAUO,YAAY,CAAZ,CAAV,CAAP;AACA;AACD;AACD,qBAAOnQ,GAAG4P,MAAH,EAAP;AACA;;AAED,qBAASS,aAAT,CAAuBJ,aAAvB,EAAsClF,UAAtC,EAAkD;AACjD,kBAAIuF,SAASL,cAAcH,SAAd,CAAwB,qBAAxB,CAAb;AACGQ,qBAAOC,KAAP,CAAa,MAAb,EAAqBxF,WAAWjL,KAAhC;;AAEA,kBAAI0Q,MAAMP,cAAcL,MAAd,CAAqB,KAArB,CAAV;AACA,kBAAIa,KAAKR,cAAcL,MAAd,CAAqB,eAArB,CAAT;AACA,kBAAIhQ,IAAI4Q,IAAI9B,MAAJ,CAAW,GAAX,CAAR;AACA9O,gBAAE8Q,OAAF,CAAU,eAAV,EAA2B,IAA3B;AACA9Q,gBAAE2Q,KAAF,CAAQ,kBAAR,EAA4BxF,WAAWjL,KAAvC;AACAF,gBAAEyJ,IAAF,CAAO0B,WAAWH,cAAlB;AACH;;AAED,qBAAS+F,cAAT,CAAwBV,aAAxB,EAAuClF,UAAvC,EAAmD;AAClD,kBAAI6F,aAAa5Q,GAAG4P,MAAH,CAAUK,cAAcC,IAAd,GAAqBW,UAA/B,CAAjB;AACAD,yBAAWlC,MAAX,CAAkB,IAAlB;AACG,kBAAIoC,IAAIF,WAAWlC,MAAX,CAAkB,MAAlB,CAAR;AACAoC,gBAAEJ,OAAF,CAAU,eAAV,EAA2B,IAA3B;AACAI,gBAAEP,KAAF,CAAQ,kBAAR,EAA4BxF,WAAWjL,KAAvC;AACAgR,gBAAEzH,IAAF,CAAO0B,WAAWH,cAAlB;AACH;;AAED,qBAASmG,WAAT,GAAuB;AACrB,kBAAIpS,OAAOuJ,KAAK7B,OAAhB;AACA6B,mBAAK7B,OAAL,GAAe,EAAf,CAFqB,CAEF;AACnBxH,sBAAQC,KAAR,CAAc,oBAAd;AACA,kBAAI8J,MAAM/C,EAAEC,SAASC,cAAT,CAAwBmC,KAAK1D,KAAL,CAAWC,OAAnC,CAAF,CAAV;AACAoB,gBAAE+C,GAAF,EAAO+F,GAAP,CAAW,WAAX,EAAwB9I,EAAE+C,GAAF,EAAO+F,GAAP,CAAW,WAAX,CAAxB;AACA,kBAAIzG,KAAK1D,KAAL,CAAW/C,QAAf,EAAyB;AACvBoE,kBAAE+C,GAAF,EAAO+F,GAAP,CAAW,WAAX,EAAwB,MAAxB;AACD;;AAED,kBAAI/F,IAAI,CAAJ,MAAWR,SAAf,EAA0B;AACxB;AACD;;AAED,mBAAK,IAAI4I,GAAT,IAAgBrS,IAAhB,EAAsB;AACpB,oBAAIoM,aAAapM,KAAKqS,GAAL,CAAjB;;AAEA;AACA;AACA,oBAAIf,gBAAgBP,kBAAkB9G,IAAI,CAAJ,CAAlB,EAA0BoI,GAA1B,CAApB;AACA,oBAAI,CAACf,cAAcgB,KAAd,EAAL,EAA4B;AACxBZ,gCAAcJ,aAAd,EAA6BlF,UAA7B;AACA;AACH;;AAEDkF,gCAAgBJ,yBAAyBjH,IAAI,CAAJ,CAAzB,EAAiCoI,GAAjC,CAAhB;AACH,oBAAI,CAACf,cAAcgB,KAAd,EAAL,EAA4B;AAC3BN,iCAAeV,aAAf,EAA8BlF,UAA9B;AACA;AACA;;AAEDkF,gCAAgBD,qBAAqBpH,IAAI,CAAJ,CAArB,EAA6BoI,GAA7B,CAAhB;AACH,oBAAI,CAACf,cAAcgB,KAAd,EAAL,EAA4B;AAC3BZ,gCAAcJ,aAAd,EAA6BlF,UAA7B;AACA;AACA;;AAEDlM,wBAAQC,KAAR,CAAc,mDAAmDkS,GAAjE;AACK;AACD;AACD,aAzH4B,CAyH3B;;AAED,qBAASzK,MAAT,GAAkB;AACjBuI;AACAiC;AACD;;AAED,iBAAKnM,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAClC0B;AACA2B,mBAAKgJ,kBAAL;AACD,aAHD;AAID;;;;QAtmBuB/Q,gB;;AAgoB1B+D,kBAAYiN,WAAZ,GAA0B,aAA1B;;6BAGEjN,W;;kCACAA,W","file":"diagramControl.js","sourcesContent":["import mermaid from './libs/mermaid/dist/mermaid';\r\nimport d3 from './libs/d3/dist/d3.min';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {\r\n  MetricsPanelCtrl\r\n} from 'app/plugins/sdk';\r\nimport {\r\n  diagramEditor,\r\n  displayEditor,\r\n  compositeEditor\r\n} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!';\r\n\r\nconst mermaidAPI = mermaid.mermaidAPI;\r\n\r\nconst panelDefaults = {\r\n  composites: [],\r\n  metricCharacterReplacements: [],\r\n  // other style overrides\r\n  seriesOverrides: [],\r\n  thresholds: '0,10',\r\n  decimals: 2, // decimal precision\r\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n  legend: {\r\n    show: true,\r\n    min: true,\r\n    max: true,\r\n    avg: true,\r\n    current: true,\r\n    total: true,\r\n    gradient: {\r\n      enabled: true,\r\n      show: true\r\n    }\r\n  },\r\n  maxDataPoints: 100,\r\n  mappingType: 1,\r\n  maxWidth: false,\r\n  nullPointMode: 'connected',\r\n  moddedSeriesVal: 0,\r\n  format: 'none',\r\n  valueName: 'avg',\r\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n  valueMaps: [{\r\n    value: 'null',\r\n    op: '=',\r\n    text: 'N/A'\r\n  }],\r\n  content: 'graph LR\\n' +\r\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n    'A --> C(Round Rect)\\n' +\r\n    'B --> D{Rhombus}\\n' +\r\n    'C --> D\\n',\r\n  mode: 'content', //allowed values: 'content' and 'url'\r\n  mermaidServiceUrl: '',\r\n  init: {\r\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    cloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n    flowchart: {\r\n      htmlLabels: true,\r\n      useMaxWidth: true\r\n    },\r\n    sequenceDiagram: {\r\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n      actorMargin: 50, // - Margin between actors\r\n      width: 150, // - Width of actor boxes\r\n      height: 65, // - Height of actor boxes00000000001111\r\n      boxMargin: 10, // - Margin around l01oop boxes\r\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n      noteMargin: 10, // - margin around notes\r\n      messageMargin: 35, // - Space between messages\r\n      mirrorActors: true, // - mirror actors under diagram\r\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n    },\r\n    gantt: {\r\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n      barHeight: 20, // - the height of the bars in the graph\r\n      barGap: 4, // - the margin between the different activities in the gantt diagram\r\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n      fontSize: 11, // - font size ...\r\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n      numberSectionStyles: 3, // - the number of alternating section styles\r\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n    },\r\n    //classDiagram: {},\r\n    //info: {}\r\n  }\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce, $http) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, panelDefaults);\r\n    this.$http = $http;\r\n    this.panel.graphId = 'diagram_' + this.panel.id;\r\n    this.containerDivId = 'container_' + this.panel.graphId;\r\n    this.$sce = $sce;\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.initializeMermaid();\r\n  }\r\n\r\n  initializeMermaid() {\r\n    mermaidAPI.initialize(this.panel.init);\r\n    mermaidAPI.parseError = this.handleParseError.bind(this);\r\n  }\r\n\r\n  handleParseError(err, hash) {\r\n    this.error = 'Failed to parse diagram definition';\r\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Diagram', diagramEditor, 2);\r\n    this.addEditorTab('Display', displayEditor, 3);\r\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\r\n  }\r\n\r\n  getDiagramContainer() {\r\n    return $(document.getElementById(this.containerDivId));\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    console.debug('received data');\r\n    console.debug(dataList);\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    console.debug('mapped dataList to series');\r\n    console.debug(this.series);\r\n    var data = this.setValues();\r\n    // this update works for local diagrams, if the url method is used the data has to be stored in the callback\r\n    this.svgData = data;\r\n    this.updateDiagram(data);\r\n    this.render();\r\n  }\r\n\r\n  replaceMetricCharacters(metricName) {\r\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\r\n    if (typeof metricName !== 'string') return \"DATASOURCE_SENT_INVALID_METRIC_TARGET\";\r\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\r\n    for (var index in this.panel.metricCharacterReplacements) {\r\n      var replacement = this.panel.metricCharacterReplacements[index];\r\n      // start with a simple replacement\r\n      var pattern = replacement.replacementPattern;\r\n      // check if the pattern is empty\r\n      if (pattern.length === 0) continue;\r\n      // if it is a regex, convert\r\n      if (pattern[0] === '/') {\r\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\r\n      }\r\n      replacedText = replacedText.replace(\r\n        pattern,\r\n        replacement.replaceWithText\r\n      );\r\n    }\r\n    return replacedText;\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var alias = this.replaceMetricCharacters(seriesData.target);\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: alias,\r\n      unit: seriesData.unit\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    var datapoints = seriesData.datapoints || [];\r\n    if (datapoints && datapoints.length > 0) {\r\n      var last = datapoints[datapoints.length - 1][1];\r\n      var from = this.range.from;\r\n      if (last - from < -10000) {\r\n        series.isOutsideRange = true;\r\n      }\r\n    }\r\n    return series;\r\n  } // End seriesHandler()\r\n\r\n  addSeriesOverride(override) {\r\n    this.panel.seriesOverrides.push(override || {});\r\n  }\r\n\r\n  removeSeriesOverride(override) {\r\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n    this.refresh();\r\n  }\r\n\r\n  addComposite(composite) {\r\n    this.panel.composites.push(composite || {});\r\n  }\r\n  removeComposite(composite) {\r\n    this.panel.composites = _.without(this.panel.composites, composite);\r\n    this.refresh();\r\n  }\r\n  getSeriesNamesForComposites() {\r\n    return _.map(this.$scope.ctrl.series, function(series) {\r\n      return series.alias;\r\n    });\r\n  }\r\n\r\n  addMetricToComposite(composite) {\r\n    if (composite.metrics === undefined) {\r\n      composite.metrics = [{}];\r\n    } else {\r\n      composite.metrics.push({});\r\n    }\r\n    this.refresh();\r\n  }\r\n  removeMetricFromComposite(composite, metric) {\r\n    composite.metrics = _.without(composite.metrics, metric);\r\n    this.refresh();\r\n  }\r\n\r\n  addMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements.push(replacement || {\r\n      replacementPattern: '',\r\n      replaceWithText: '_'\r\n    });\r\n  }\r\n  removeMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements = _.without(this.panel.metricCharacterReplacements, replacement);\r\n    this.refresh();\r\n  }\r\n\r\n  updateThresholds() {\r\n    var thresholdCount = this.panel.thresholds.length;\r\n    var colorCount = this.panel.colors.length;\r\n    this.refresh();\r\n  }\r\n\r\n  changeColor(colorIndex, color) {\r\n    this.panel.colors[colorIndex] = color;\r\n  }\r\n\r\n  removeColor(colorIndex) {\r\n    this.panel.colors.splice(colorIndex, 1);\r\n  }\r\n\r\n  addColor() {\r\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.refresh();\r\n  }\r\n\r\n  clearDiagram() {\r\n    if ($('#'+this.panel.graphId).length) {\r\n      $('#' + this.panel.graphId).remove();\r\n    }\r\n    this.svg = {};\r\n  }\r\n\r\n  renderDiagram(graphDefinition, data) {\r\n    // substitute values inside \"link text\"\r\n    // this will look for any composite prefixed with a # and substitute the value of the composite\r\n    // if a series alias is found, in the form #alias, the value will be substituted\r\n    // this allows link values to be displayed based on the metric\r\n    graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\r\n    graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\r\n    var diagramContainer = $(document.getElementById(this.containerDivId));\r\n    var _this = this;\r\n    var renderCallback = function(svgCode, bindFunctions) {\r\n      if (svgCode === '') {\r\n        diagramContainer.html('There was a problem rendering the graph');\r\n      } else {\r\n        diagramContainer.html(svgCode);\r\n        bindFunctions(diagramContainer[0]);\r\n        console.debug(\"Inside rendercallback of renderDiagram\");\r\n        // svgData is empty when this callback happens, update it so the styles will be applied\r\n        _this.svgData = data;\r\n        // force a render or we will not see an update\r\n        _this.render();\r\n      }\r\n    };\r\n    // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n    mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n  }\r\n\r\n  updateDiagram(data) {\r\n    if (this.panel.content.length > 0) {\r\n      var mode = this.panel.mode;\r\n      if (mode == 'url') {\r\n        var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\r\n        var _this = this;\r\n        this.$http({\r\n          method: 'GET',\r\n          url: templatedURL,\r\n          headers: { 'Accept': 'text/x-mermaid,text/plain;q=0.9,*/*;q=0.8' }\r\n        }).then(function successCallback(response) {\r\n          //the response must have text/plain content-type\r\n          // clearing the diagram here will result in less artifacting waiting for the response\r\n          _this.clearDiagram();\r\n          _this.renderDiagram(response.data, data);\r\n        }, function errorCallback(response) {\r\n          console.warn('error', response);\r\n        })\r\n      } else {\r\n        this.clearDiagram();\r\n        this.renderDiagram(this.panel.content, data);\r\n      }\r\n    }\r\n  } // End updateDiagram()\r\n\r\n\r\n\r\n  /**\r\n   * substitute values inside \"link text\"\r\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\r\n   * if a series alias is found, in the form #alias, the value will be substituted\r\n   * this allows link values to be displayed based on the metric\r\n   *\r\n   * Prefix Modifier For Composites\r\n   *   # Raw Value of Series\r\n   *   ! Raw Value plus Metric Name\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\r\n   *\r\n   * Prefix Modifier For Series\r\n   *   # Raw Value of Series\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *\r\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\r\n   * @param  {[Array]} data [Series Data]\r\n   * @return {[String]} [Modified Graph Definition]\r\n   */\r\n  substituteHashPrefixedNotation(graphDefinition, data) {\r\n    // inspect the string, locate all # prefixed items, and replace them with the value\r\n    // of the series. If no matching series is found, leave it alone\r\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\r\n    if (matches === null) return graphDefinition;\r\n    // check if there is a composite with a matching name\r\n    for (var i = 0; i < matches.length; i++) {\r\n      var aMatch = matches[i];\r\n      var valueType = aMatch[0];\r\n      aMatch = aMatch.substring(1);\r\n      // check composites first\r\n      for (var j = 0; j < this.panel.composites.length; j++) {\r\n        var aComposite = this.panel.composites[j];\r\n        if (aComposite.name === aMatch) {\r\n          // found matching composite, get the valueFormatted\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[aComposite.name].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '!':\r\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[aComposite.name].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n            case '&':\r\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      // next check series\r\n      for (var k = 0; k < this.series.length; k++) {\r\n        var seriesItem = this.series[k];\r\n        if (seriesItem.alias === aMatch) {\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[seriesItem.alias].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[seriesItem.alias].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return graphDefinition;\r\n  }\r\n\r\n  setValues() {\r\n    var data = {};\r\n    if (this.series && this.series.length > 0) {\r\n      for (var i = 0; i < this.series.length; i++) {\r\n        var seriesItem = this.series[i];\r\n        console.debug('setting values for series');\r\n        console.debug(seriesItem);\r\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n        var lastPoint = _.last(seriesItem.datapoints);\r\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n        if (this.panel.valueName === 'name') {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueRounded = 0;\r\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n        } else if (_.isString(lastValue)) {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n          data[seriesItem.alias].valueRounded = 0;\r\n        } else {\r\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\r\n          // put the value in quotes to escape \"most\" special characters\r\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n        }\r\n        if (this.panel.legend.gradient.enabled) {\r\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        } else {\r\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        }\r\n      }\r\n    }\r\n    // now add the composites to data\r\n    for (var i = 0; i < this.panel.composites.length; i++) {\r\n      var aComposite = this.panel.composites[i];\r\n      var currentWorstSeries = null;\r\n      var currentWorstSeriesName = null;\r\n      for (var j = 0; j < aComposite.metrics.length; j++) {\r\n        var aMetric = aComposite.metrics[j];\r\n        var seriesName = aMetric.seriesName;\r\n        // For testing\r\n        console.debug(\"aMetric value: \" + seriesItem.valueFormatted);\r\n        console.debug(\"aMetric: \" + seriesName);\r\n        // make sure we have a match\r\n        if (!data.hasOwnProperty(seriesName)) continue;\r\n        var seriesItem = data[seriesName];\r\n        // add the name of the series Item\r\n        seriesItem.nameOfMetric = seriesName;\r\n        // check colorData thresholds\r\n        if (currentWorstSeries === null) {\r\n          currentWorstSeries = seriesItem;\r\n          currentWorstSeriesName = seriesItem.nameOfMetric;\r\n        } else {\r\n          currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem, aComposite.showLowest);\r\n          currentWorstSeriesName = seriesItem.nameOfMetric;\r\n        }\r\n        delete seriesItem.nameOfMetric;\r\n      }\r\n      // Prefix the valueFormatted with the actual metric name\r\n      if (currentWorstSeries !== null) {\r\n        currentWorstSeries.valueFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\r\n        currentWorstSeries.valueRawFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.value;\r\n        currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\r\n        // now push the composite into data\r\n        data[aComposite.name] = currentWorstSeries;\r\n      }\r\n    }\r\n    return data;\r\n  } // End setValues()\r\n\r\n  getWorstSeries(series1, series2, showLowest) {\r\n    if (showLowest) {\r\n    \t// return series1 if the value is lower, otherwise return series2\r\n    \treturn series1.value < series2.value ? series1 : series2;\r\n    } else {\r\n    \t// return series1 if the value is greater, otherwise return series2\r\n    \treturn series1.value > series2.value ? series1 : series2;\r\n    }\r\n  }\r\n\r\n  getGradientForValue(data, value) {\r\n    console.debug('Getting gradient for value');\r\n    console.debug(data);\r\n    console.debug(value);\r\n    var min = Math.min.apply(Math, data.thresholds);\r\n    var max = Math.max.apply(Math, data.thresholds);\r\n    var absoluteDistance = max - min;\r\n    var valueDistanceFromMin = value - min;\r\n    var xPercent = valueDistanceFromMin / absoluteDistance;\r\n    // Get the smaller number to clamp at 0.999 max\r\n    xPercent = Math.min(0.999, xPercent);\r\n    // Get the larger number to clamp at 0.001 min\r\n    xPercent = Math.max(0.001, xPercent);\r\n    if (data.invertColors) {\r\n      xPercent = 1 - xPercent;\r\n    }\r\n\r\n    return getColorByXPercentage(this.canvas, xPercent);\r\n  }\r\n\r\n  applyOverrides(seriesItemAlias) {\r\n    var seriesItem = {},\r\n      colorData = {},\r\n      overrides = {};\r\n\r\n    console.debug('applying overrides for seriesItem');\r\n    console.debug(seriesItemAlias);\r\n    console.debug(this.panel.seriesOverrides);\r\n    for (var i = 0; i < this.panel.seriesOverrides.length; i++) {\r\n      console.debug('comparing:');\r\n      console.debug(this.panel.seriesOverrides[i]);\r\n\r\n      if (this.panel.seriesOverrides[i]) {\r\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n        var matches = seriesItemAlias.match(regex);\r\n        if (matches && matches.length > 0) {\r\n          overrides = this.panel.seriesOverrides[i];\r\n        }\r\n      }\r\n    }\r\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n      return Number(strVale.trim());\r\n    });\r\n    colorData.colorMap = this.panel.colors.slice();\r\n    colorData.invertColors = overrides.invertColors || false;\r\n    if (colorData.invertColors) {\r\n      colorData.colorMap.reverse();\r\n    }\r\n    seriesItem.colorData = colorData;\r\n\r\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n    seriesItem.format = overrides.unitFormat || this.panel.format;\r\n    return seriesItem;\r\n  }\r\n\r\n  invertColorOrder() {\r\n    this.panel.colors.reverse();\r\n    this.refresh();\r\n  }\r\n\r\n  getDecimalsForValue(value) {\r\n    if (_.isNumber(this.panel.decimals)) {\r\n      return {\r\n        decimals: this.panel.decimals,\r\n        scaledDecimals: null\r\n      };\r\n    }\r\n\r\n    var delta = value / 2;\r\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n    var magn = Math.pow(10, -dec),\r\n      norm = delta / magn, // norm is between 1.0 and 10.0\r\n      size;\r\n\r\n    if (norm < 1.5) {\r\n      size = 1;\r\n    } else if (norm < 3) {\r\n      size = 2;\r\n      // special case for 2.5, requires an extra decimal\r\n      if (norm > 2.25) {\r\n        size = 2.5;\r\n        ++dec;\r\n      }\r\n    } else if (norm < 7.5) {\r\n      size = 5;\r\n    } else {\r\n      size = 10;\r\n    }\r\n\r\n    size *= magn;\r\n\r\n    // reduce starting decimals if not needed\r\n    if (Math.floor(value) === value) {\r\n      dec = 0;\r\n    }\r\n\r\n    var result = {};\r\n    result.decimals = Math.max(0, dec);\r\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n    return result;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    var templateSrv = this.templateSrv;\r\n    var diagramElement = elem.find('.diagram');\r\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\r\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    console.debug('found diagramContainer');\r\n    console.debug(diagramContainer);\r\n    elem.css('height', '100%');\r\n\r\n    var canvas = elem.find('.canvas')[0];\r\n    ctrl.canvas = canvas;\r\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n    function updateCanvasStyle() {\r\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n      var canvasContext = canvas.getContext(\"2d\");\r\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\r\n        var currentColor = ctrl.panel.colors[i];\r\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\r\n      }\r\n      canvasContext.fillStyle = grd;\r\n      canvasContext.fillRect(0, 0, canvas.width, 3);\r\n      ctrl.canvasContext = canvasContext;\r\n\r\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    }\r\n    updateCanvasStyle(); // run once at beginning so the gradients are ready on first data\r\n    \r\n    function selectElementById(container, id) {\r\n    \treturn d3.select(container.getElementById(id)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n    }\r\n    \r\n    function selectElementByEdgeLabel(container, id) {\r\n    \treturn d3.select(container).selectAll('span')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == id;\r\n\t    \t});\r\n    }\r\n\r\n    function selectElementByAlias(container, alias) {\r\n    \tvar targetElement = d3.select(container).selectAll('div')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == alias;\r\n\t    \t});\r\n    \tvar node = targetElement.node();\r\n    \tif (node != null) {\r\n    \t\tvar parentShape = $(node).closest('.node');\r\n    \t\tif (parentShape.length > 0) {\r\n    \t\t\treturn d3.select(parentShape[0]);\r\n    \t\t}     \t\t\r\n    \t}\r\n    \treturn d3.select();\r\n    }\r\n    \r\n    function styleD3Shapes(targetElement, seriesItem) {\r\n    \tvar shapes = targetElement.selectAll('rect,circle,polygon');\r\n        shapes.style('fill', seriesItem.color);\r\n\r\n        var div = targetElement.select('div');\r\n        var fo = targetElement.select('foreignObject');\r\n        var p = div.append('p');\r\n        p.classed('diagram-value', true);\r\n        p.style('background-color', seriesItem.color);\r\n        p.html(seriesItem.valueFormatted);\r\n    }\r\n    \r\n    function styleEdgeLabel(targetElement, seriesItem) {\r\n    \tvar edgeParent = d3.select(targetElement.node().parentNode);\r\n    \tedgeParent.append('br');\r\n        var v = edgeParent.append('span');\r\n        v.classed('diagram-value', true);\r\n        v.style('background-color', seriesItem.color);\r\n        v.html(seriesItem.valueFormatted);\r\n    }\r\n\r\n    function updateStyle() {\r\n      var data = ctrl.svgData;\r\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n      console.debug('updating svg style');\r\n      var svg = $(document.getElementById(ctrl.panel.graphId));\r\n      $(svg).css('min-width', $(svg).css('max-width'));\r\n      if (ctrl.panel.maxWidth) {\r\n        $(svg).css('max-width', '100%');\r\n      }\r\n\r\n      if (svg[0] === undefined) {\r\n        return;\r\n      }\r\n\r\n      for (var key in data) {\r\n        var seriesItem = data[key];\r\n        \r\n        // Find nodes by ID if we can\r\n        //console.info('finding targetElement');\r\n        var targetElement = selectElementById(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n            styleD3Shapes(targetElement, seriesItem);\r\n            continue;\r\n        }\r\n        \r\n        targetElement = selectElementByEdgeLabel(svg[0], key);\r\n    \tif (!targetElement.empty()) {\r\n    \t\tstyleEdgeLabel(targetElement, seriesItem);\r\n    \t\tcontinue;\r\n    \t}\r\n    \t\r\n    \ttargetElement = selectElementByAlias(svg[0], key);\r\n\t\tif (!targetElement.empty()) {\r\n\t\t\tstyleD3Shapes(targetElement, seriesItem);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconsole.debug('couldnt not find a diagram node with id/text: ' + key);\r\n      }\r\n      //return $(svg).html();\r\n    } // End updateStyle()\r\n\r\n     function render() {\r\n      updateCanvasStyle();\r\n      updateStyle();\r\n    }\r\n\r\n    this.events.on('render', function() {\r\n      render();\r\n      ctrl.renderingCompleted();\r\n    });\r\n  }\r\n  // End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n  console.debug('Getting color for value');\r\n  console.debug(data);\r\n  console.debug(value);\r\n  for (var i = data.thresholds.length; i > 0; i--) {\r\n    if (value >= data.thresholds[i - 1]) {\r\n      console.debug('Color['+(i-1)+']: ' + data.colorMap[i]);\r\n      return data.colorMap[i-1];\r\n      //return data.colorMap[i];\r\n    }\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent) {\r\n  var x = canvas.width * xPercent;\r\n  var context = canvas.getContext(\"2d\");\r\n  var p = context.getImageData(x, 1, 1, 1).data;\r\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\r\n  return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n  DiagramCtrl,\r\n  DiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}