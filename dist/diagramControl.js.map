{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","info","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","panelDefaults","composites","seriesOverrides","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","seriesData","datapoints","alias","target","replace","unit","flotpairs","getFlotPairs","override","push","without","composite","ctrl","metrics","undefined","metric","thresholdCount","colorCount","refresh","colorIndex","splice","subItem","remove","svg","clearDiagram","graphDefinition","templateSrv","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","valueFormatted","decimals","scaledDecimals","roundValue","getGradientForValue","colorData","aComposite","currentWorstSeries","j","aMetric","seriesName","getWorstSeries","name","series1","series2","worstSeries","series1thresholdLevel","getThesholdLevel","series2thresholdLevel","log","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","stringToJsRegex","matches","match","split","strVale","Number","trim","slice","reverse","isNumber","delta","dec","floor","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","key","targetElement","d3","select","selectAll","style","div","fo","attr","classed","filter","parents","edgeElement","parent","addClass","dElement","warn","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {diagramEditor, displayEditor, compositeEditor} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!'\r\n\r\nconst panelDefaults = {\r\n  composites: [],\r\n\t// other style overrides\r\n  seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true,\r\n\t\tgradient: {\r\n\t\t\tenabled: true,\r\n\t\t\tshow: true\r\n\t\t}\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tmaxWidth: false,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n    valueMaps: [\r\n      { value: 'null', op: '=', text: 'N/A' }\r\n    ],\r\n    content: 'graph LR\\n' +\r\n\t\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t\t'A --> C(Round Rect)\\n' +\r\n\t\t'B --> D{Rhombus}\\n' +\r\n\t\t'C --> D\\n',\r\n\tinit: {\r\n\t\tlogLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    \tcloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n\t\tstartOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n\t\tarrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n\t\tflowchart: {\r\n\t\t\thtmlLabels: true,\r\n\t\t\tuseMaxWidth: true\r\n\t\t},\r\n\t\tsequenceDiagram: {\r\n\t\t\tdiagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n\t\t\tdiagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n\t\t\tactorMargin: 50, // - Margin between actors\r\n\t\t\twidth: 150, // - Width of actor boxes\r\n\t\t\theight: 65, // - Height of actor boxes00000000001111\r\n\t\t\tboxMargin: 10, // - Margin around l01oop boxes\r\n\t\t\tboxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n\t\t\tnoteMargin: 10, // - margin around notes\r\n\t\t\tmessageMargin: 35, // - Space between messages\r\n\t\t\tmirrorActors: true, // - mirror actors under diagram\r\n\t\t\tbottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n\t\t\tuseMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n\t\t},\r\n\t\tgantt: {\r\n\t\t\ttitleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n\t\t\tbarHeight: 20, // - the height of the bars in the graph\r\n\t\t\tbarGap: 4, // - the margin between the different activities in the gantt diagram\r\n\t\t\ttopPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n\t\t\tleftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n\t\t\tgridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n\t\t\tfontSize: 11, // - font size ...\r\n\t\t\tfontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n\t\t\tnumberSectionStyles: 3, // - the number of alternating section styles\r\n\t\t\t/** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n\t\t},\r\n\t\t//classDiagram: {},\r\n    \t//info: {}\r\n\t}\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\r\n\t\tthis.panel.graphId = 'diagram_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.graphId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.unitFormats = kbn.getUnitFormats();\r\n\t\tthis.initializeMermaid();\r\n\t}\r\n\r\n\tinitializeMermaid(){\r\n\t\tmermaidAPI.initialize(this.panel.init);\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\r\n\thandleParseError(err, hash){\r\n\t\tthis.error = 'Failed to parse diagram definition';\r\n\t\tthis.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n\t}\r\n\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\r\n\t}\r\n\r\n\tgetDiagramContainer(){\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\t\tconsole.debug(this.series);\r\n\r\n\t\tvar data = {};\r\n\t\tthis.setValues(data);\r\n\t\tthis.updateDiagram(data);\r\n\t\tthis.svgData = data;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_'),\r\n      \t\tunit: seriesData.unit\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\r\n  addComposite(composite) {\r\n\t\tthis.panel.composites.push(composite || {});\r\n\t}\r\n  removeComposite(composite) {\r\n\t\tthis.panel.composites = _.without(this.panel.composites, composite);\r\n\t  this.render();\r\n\t}\r\n  getSeriesNamesForComposites() {\r\n    return _.map(this.$scope.ctrl.series, function(series) {\r\n      return series.alias;\r\n    });\r\n  };\r\n\r\n  addMetricToComposite(composite) {\r\n    if (composite.metrics === undefined) {\r\n      composite.metrics = [{}];\r\n    }\r\n    else {\r\n      composite.metrics.push({})\r\n    }\r\n  }\r\n  removeMetricFromComposite(composite, metric) {\r\n    composite.metrics = _.without(composite.metrics, metric);\r\n  }\r\n\r\n\tupdateThresholds(){\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\tchangeColor(colorIndex, color){\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\r\n\tremoveColor(colorIndex){\r\n\t\tthis.panel.colors.splice(colorIndex,1);\r\n\t}\r\n\r\n\taddColor(){\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\r\n\tsetUnitFormat(subItem) {\r\n\t\tthis.panel.format = subItem.value;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tclearDiagram(){\r\n\t\t$('#'+this.panel.graphId).remove();\r\n\t\tthis.svg = {};\r\n\t}\r\n\r\n\tupdateDiagram(data){\r\n\t\tif(this.panel.content.length > 0){\r\n\t\t\tthis.clearDiagram();\r\n\t\t\tvar graphDefinition = this.panel.content;\r\n\t\t\tgraphDefinition = this.templateSrv.replace(graphDefinition);\r\n\t\t\tthis.diagramType = mermaidAPI.detectType(graphDefinition);\r\n\t\t\tvar diagramContainer = $(document.getElementById(this.containerDivId));\r\n\r\n\t\t\tvar renderCallback = function (svgCode, bindFunctions){\r\n\t\t\t\tif(svgCode == '') {\r\n\t\t\t\t\tdiagramContainer.html('There was a problem rendering the graph');\r\n\t\t\t\t} else {\r\n\t\t\t    \t\tdiagramContainer.html(svgCode);\r\n\t\t\t\t\tbindFunctions(diagramContainer[0]);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n\t\t\tmermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\t}\r\n\t} // End updateDiagram()\r\n\r\n\tsetValues(data) {\r\n\t    if (this.series && this.series.length > 0) {\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar seriesItem = this.series[i];\r\n\t\t\t\tconsole.debug('setting values for series');\r\n\t\t\t\tconsole.debug(seriesItem);\r\n\t\t\t\tdata[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n\t\t\t\tvar lastPoint = _.last(seriesItem.datapoints);\r\n\t\t\t    var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n\t\t\t\tif (this.panel.valueName === 'name') {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n\t\t\t\t} else if (_.isString(lastValue)) {\r\n\t\t\t        data[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n\t\t\t        //data[seriesItem.alias].flotpairs = seriesItem.flotpairs;\r\n\r\n\t\t\t        var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n\t\t\t        var formatFunc = kbn.valueFormats[this.panel.format];\r\n\t\t\t        data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t\t        data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.panel.legend.gradient.enabled){\r\n\t\t\t\t\tdata[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    }\r\n      // now add the composites to data\r\n      for (var i = 0; i < this.panel.composites.length; i++) {\r\n        var aComposite = this.panel.composites[i];\r\n        var currentWorstSeries = null;\r\n        for (var j = 0; j < aComposite.metrics.length; j++) {\r\n          //debugger;\r\n          var aMetric = aComposite.metrics[j];\r\n          var seriesName = aMetric.seriesName;\r\n          var seriesItem = data[seriesName];\r\n          // check colorData thresholds\r\n          if (currentWorstSeries === null) {\r\n            currentWorstSeries = seriesItem;\r\n          } else {\r\n            currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem);\r\n          }\r\n        }\r\n        // now push the composite into data\r\n        data[aComposite.name] = currentWorstSeries;\r\n      }\r\n\t} // End setValues()\r\n\r\n  getWorstSeries(series1, series2) {\r\n    var worstSeries = series1;\r\n    var series1thresholdLevel = this.getThesholdLevel(series1);\r\n    var series2thresholdLevel = this.getThesholdLevel(series2);\r\n    console.log(\"Series1 threhold level: \" + series1thresholdLevel);\r\n    console.log(\"Series2 threhold level: \" + series2thresholdLevel);\r\n    if (series2thresholdLevel > series1thresholdLevel) {\r\n      // series2 has higher threshold violation\r\n      worstSeries = series2;\r\n    }\r\n    return worstSeries;\r\n  }\r\n\r\n  // returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\r\n  getThesholdLevel(series) {\r\n    // default to ok\r\n    var thresholdLevel = 0;\r\n    var value = series.value;\r\n    var thresholds = series.colorData.thresholds;\r\n    // if no thresholds are defined, return 0\r\n    if (thresholds === undefined) {\r\n      return thresholdLevel;\r\n    }\r\n    // make sure thresholds is an array of size 2\r\n    if (thresholds.length !== 2) {\r\n      return thresholdLevel;\r\n    }\r\n    if (value >= thresholds[0]) {\r\n      // value is equal or greater than first threshold\r\n      thresholdLevel = 1;\r\n    }\r\n    if (value >= thresholds[1]) {\r\n      // value is equal or greater than second threshold\r\n      thresholdLevel = 2;\r\n    }\r\n    return thresholdLevel;\r\n  }\r\n\r\n\tgetGradientForValue(data, value){\r\n\t\tconsole.info('Getting gradient for value');\r\n\t\tconsole.debug(data);\r\n\t\tconsole.debug(value);\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin/absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.999 max\r\n\t\txPercent = Math.min(0.999, xPercent);\r\n\t\t// Get the larger number to clamp at 0.001 min\r\n\t\txPercent = Math.max(0.001, xPercent);\r\n\t\tif(data.invertColors){\r\n\t\t\txPercent = 1-xPercent;\r\n\t\t}\r\n\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\r\n\t\t\tif (this.panel.seriesOverrides[i]){\r\n\t\t\t\tvar regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n\t\t\t\tvar matches = seriesItemAlias.match(regex);\r\n\t\t\t\tif(matches && matches.length > 0){\r\n\t\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors.slice();\r\n\t\tcolorData.invertColors = overrides.invertColors || false;\r\n\t\tif(colorData.invertColors){\r\n\t\t\tcolorData.colorMap.reverse();\r\n\t\t}\r\n\t\tseriesItem.colorData = colorData;\r\n\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n\t\treturn seriesItem;\r\n\t}\r\n\r\n\tinvertColorOrder() {\r\n\t    this.panel.colors.reverse();\r\n\t    this.refresh();\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n\t    if (_.isNumber(this.panel.decimals)) {\r\n\t      return {decimals: this.panel.decimals, scaledDecimals: null};\r\n\t    }\r\n\r\n\t    var delta = value / 2;\r\n\t    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n\t    var magn = Math.pow(10, -dec),\r\n\t      norm = delta / magn, // norm is between 1.0 and 10.0\r\n\t      size;\r\n\r\n\t    if (norm < 1.5) {\r\n\t      size = 1;\r\n\t    } else if (norm < 3) {\r\n\t      size = 2;\r\n\t      // special case for 2.5, requires an extra decimal\r\n\t      if (norm > 2.25) {\r\n\t        size = 2.5;\r\n\t        ++dec;\r\n\t      }\r\n\t    } else if (norm < 7.5) {\r\n\t      size = 5;\r\n\t    } else {\r\n\t      size = 10;\r\n\t    }\r\n\r\n\t    size *= magn;\r\n\r\n\t    // reduce starting decimals if not needed\r\n\t    if (Math.floor(value) === value) { dec = 0; }\r\n\r\n\t    var result = {};\r\n\t    result.decimals = Math.max(0, dec);\r\n\t    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n\t    return result;\r\n\t}\r\n\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar templateSrv = this.templateSrv;\r\n\t\tvar diagramElement = elem.find('.diagram');\r\n\t\tdiagramElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found diagramContainer');\r\n    \tconsole.debug(diagramContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n\r\n\t    var canvas = elem.find('.canvas')[0];\r\n\t    ctrl.canvas = canvas;\r\n\t    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n\t    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n    \tfunction render(){\r\n    \t\tsetElementHeight();\r\n    \t\tupdateCanvasStyle();\r\n    \t\tupdateStyle();\r\n    \t}\r\n\r\n    \tfunction updateCanvasStyle(){\r\n\t    \tcanvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\tvar colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n\t\t\tfor(var i=0; i<ctrl.panel.colors.length; i++){\r\n\t\t\t\tvar currentColor = ctrl.panel.colors[i];\r\n\t\t\t\tgrd.addColorStop(Math.min(colorWidth*i,1), currentColor);\r\n\t\t\t}\r\n\t\t\tcanvasContext.fillStyle = grd;\r\n\t\t\tcanvasContext.fillRect(0, 0, canvas.width, 3);\r\n    \t\tctrl.canvasContext = canvasContext;\r\n\r\n\t\t\tgradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t\tgradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    \t}\r\n\r\n\r\n\r\n    \tfunction setElementHeight() {\r\n\t      //diagramContainer.css('height', ctrl.height + 'px');\r\n\t    }\r\n\r\n    \tthis.events.on('render', function() {\r\n\t\t\trender();\r\n\t\t\tctrl.renderingCompleted();\r\n\t    });\r\n\r\n\t    function updateStyle(){\r\n\t    \tvar data = ctrl.svgData;\r\n\t    \tctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n\t\t\tconsole.info('updating svg style');\r\n\t\t\tvar svg = $(document.getElementById(ctrl.panel.graphId));\r\n\t\t\t$(svg).css('min-width', $(svg).css('max-width'));\r\n\t\t\tif (ctrl.panel.maxWidth){\r\n\t\t\t\t$(svg).css('max-width', '100%');\r\n\t\t\t}\r\n\r\n\t\t\tif(svg[0] === undefined){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var key in data){\r\n\t\t\t\tvar seriesItem = data[key];\r\n\r\n\t\t\t\t// Find nodes by ID if we can\r\n\t\t\t\tconsole.info('finding targetElement');\r\n\t\t\t\tvar targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n\r\n\t\t\t\tif(targetElement[0][0] !== null){ // probably a flowchart\r\n\t\t\t\t\ttargetElement.selectAll('rect,circle,polygon').style('fill', seriesItem.color);\r\n\r\n\t\t\t\t\tvar div = targetElement.select('div');\r\n\t\t\t\t\tvar fo = targetElement.select('foreignObject');\r\n\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\tfo.attr('height', 45);\r\n\t\t\t\t\t// Add value text\r\n\t\t\t\t\tvar p = div.append('p');\r\n\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.debug('finding element that contains id: ' + key);\r\n                    // maybe a flowchart with an alias text node\r\n                    targetElement = $(svg).find('div:contains(\"'+key+'\")').filter(function() {\r\n                        // Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\r\n                        return $(this).attr('id') === key;\r\n                    });\r\n\t\t\t\t\tif(targetElement.length > 0){\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('foreignObject').attr('height', 45);\r\n\t\t\t\t\t\t// for edge matches\r\n\t\t\t\t\t\tvar edgeElement = targetElement.parent().find('.edgeLabel');\r\n\t\t\t\t\t\tif(edgeElement.length > 0){\r\n\t\t\t\t\t\t\tedgeElement.css('background-color', 'transparent');\r\n\t\t\t\t\t\t\tedgeElement.append('<br/>'+seriesItem.valueFormatted).addClass('diagram-value');\r\n\t\t\t\t\t\t\tedgeElement.parent('div').css('text-align', 'center').css('background-color', seriesItem.color);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar dElement = d3.select(targetElement[0]);\r\n\t\t\t\t\t\t\t// Add value text\r\n\t\t\t\t\t\t\tvar p = dElement.append('p');\r\n\t\t\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetElement = $(svg).find('text:contains(\"'+key+'\")'); // sequence diagram, gantt ?\r\n\t\t\t\t\t\tif(targetElement.length == 0){\r\n\t\t\t\t\t\t\tconsole.warn('couldnt not find a diagram node with id/text: ' + key);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// for node matches\r\n\t\t\t\t\t\ttargetElement.parent().find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\ttargetElement.append('\\n' + seriesItem.valueFormatted);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.debug(targetElement);\r\n\t\t\t\tconsole.info('set nodes:' + key + ' to color:' + seriesItem.color);\r\n\t\t\t}\r\n\t\t\t//return $(svg).html();\r\n\t\t} // End updateStyle()\r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i-1]) {\r\n\t\treturn data.colorMap[i];\r\n\t}\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent){\r\n\tvar x = canvas.width * xPercent;\r\n\tvar context = canvas.getContext(\"2d\");\r\n    var p = context.getImageData(x, 1, 1, 1).data;\r\n    var color = 'rgba('+[p[0] +','+ p[1] +','+ p[2] +','+ p[3]]+')';\r\n    return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tDiagramCtrl,\r\n\tDiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}