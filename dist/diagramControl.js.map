{"version":3,"sources":["../src/diagramControl.js"],"names":["MetricsPanelCtrl","diagramEditor","displayEditor","_","panelDefaults","initialZoom","thresholds","colors","showLegend","content","DiagramCtrl","$scope","$injector","$sce","defaults","panel","graphId","id","console","log","events","on","onInitEditMode","bind","onDataReceived","mermaidAPI","initialize","startOnLoad","logLevel","parseError","handleParseError","err","hash","svg","addEditorTab","data","info","updateDiagram","_this","length","graphDefinition","render","svgCallback","svgCode","bindFunctions","trustAsHtml","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACQA,mB,kBAAAA,gB;;AACAC,gB,eAAAA,a;AAAeC,gB,eAAAA,a;;AAChBC,I;;;;;;;;;;;;;;;;;;;;;AAIDC,gB,GAAgB;AACrBC,iBAAa,CADQ;AAErBC,gBAAY,MAFS;AAGrBC,YAAQ,CAAC,wBAAD,EAA2B,0BAA3B,EAAuD,yBAAvD,CAHa;AAIrBC,gBAAY,IAJS;AAKrBC,aAAS,eACR,+CADQ,GAER,uBAFQ,GAGR,oBAHQ,GAIR;AAToB,I;;0BAYTC,W;;;AACZ,yBAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqC;AAAA;;AAAA,4HAC9BF,MAD8B,EACtBC,SADsB;;AAEpCT,OAAEW,QAAF,CAAW,OAAKC,KAAhB,EAAuBX,aAAvB;AACA,YAAKW,KAAL,CAAWC,OAAX,GAAqB,WAAW,OAAKD,KAAL,CAAWE,EAA3C;;AAEA;AACAC,aAAQC,GAAR,CAAYR,MAAZ;;AAEA,YAAKE,IAAL,GAAYA,IAAZ;AACA,YAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,YAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;;AAEAE,gBAAWC,UAAX,CAAsB;AAClBC,mBAAY,KADM;AAElBC,gBAAU;AAFQ,MAAtB;;AAKAH,gBAAWI,UAAX,GAAwB,OAAKC,gBAAL,CAAsBP,IAAtB,QAAxB;AAjBoC;AAkBpC;;;;sCAEgBQ,G,EAAKC,I,EAAK;AAC1B,WAAKC,GAAL,GAAW,oCAAoCF,GAApC,GAA0C,QAArD;AACA;;;sCAEgB;AAChB,WAAKG,YAAL,CAAkB,SAAlB,EAA6BjC,aAA7B,EAA4C,CAA5C;AACA,WAAKiC,YAAL,CAAkB,SAAlB,EAA6BhC,aAA7B,EAA4C,CAA5C;AACA;;;oCAEciC,I,EAAK;AACnBjB,cAAQkB,IAAR,CAAa,eAAb;AACAlB,cAAQC,GAAR,CAAYgB,IAAZ;AACA,WAAKE,aAAL;AACA;;;qCAEc;AACd,UAAIC,QAAQ,IAAZ;AACA,UAAG,KAAKvB,KAAL,CAAWN,OAAX,CAAmB8B,MAAnB,GAA4B,CAA/B,EAAiC;AAChC,WAAIC,kBAAkB,KAAKzB,KAAL,CAAWN,OAAX,GAAqB,IAA3C;AACGgB,kBAAWgB,MAAX,CAAkB,KAAK1B,KAAL,CAAWC,OAA7B,EAAsCwB,eAAtC,EAAuD,SAASE,WAAT,CAAqBC,OAArB,EAA8BC,aAA9B,EAA4C;AAClG;AACAN,cAAML,GAAN,GAAYK,MAAMzB,IAAN,CAAWgC,WAAX,CAAuBF,OAAvB,CAAZ;AACH,QAHE;AAIH,OAND,MAMO,CAEN;AACD;;;;KA/C+B3C,gB;;;;AAkDjCU,eAAYoC,WAAZ,GAA0B,aAA1B","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {diagramEditor, displayEditor} from './properties';\r\nimport _ from 'lodash';\r\nimport './diagram.css!'\r\nimport './libs/mermaid/dist/mermaid.css!'\r\n\r\nconst panelDefaults = {\r\n\tinitialZoom: 1,\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\r\n\tshowLegend: true,\r\n\tcontent: 'graph LR\\n' +\r\n\t\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t\t'A --> C(Round Rect)\\n' +\r\n\t\t'B --> D{Rhombus}\\n' +\r\n\t\t'C --> D\\n'\r\n};\r\n\r\nexport class DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\tthis.panel.graphId = 'graph_' + this.panel.id;\r\n\t\t\r\n\t\t//this.debugInfoEnabled(true);\r\n\t\tconsole.log($scope);\r\n\t\t\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\t\r\n\t\tmermaidAPI.initialize({\r\n\t\t    startOnLoad:false,\r\n\t\t    logLevel: 1\r\n\t\t});\r\n\t\t\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\t\r\n\thandleParseError(err, hash){\r\n\t\tthis.svg = '<p>Diagram Definition:</p><pre>' + err + '</pre>';\r\n\t}\r\n\t\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t}\r\n\t\r\n\tonDataReceived(data){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.log(data);\r\n\t\tthis.updateDiagram();\r\n\t}\r\n\r\n\tupdateDiagram(){\r\n\t\tvar _this = this;\r\n\t\tif(this.panel.content.length > 0){\r\n\t\t\tvar graphDefinition = this.panel.content + '\\n';\r\n\t\t    mermaidAPI.render(this.panel.graphId, graphDefinition, function svgCallback(svgCode, bindFunctions){\r\n\t\t\t    //console.log(svgCode);\r\n\t\t\t    _this.svg = _this.$sce.trustAsHtml(svgCode);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';"]}