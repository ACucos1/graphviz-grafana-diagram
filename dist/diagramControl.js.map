{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","info","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","panelDefaults","seriesOverrides","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","seriesData","datapoints","alias","target","replace","flotpairs","getFlotPairs","override","push","without","thresholdCount","colorCount","refresh","colorIndex","splice","remove","svg","clearDiagram","graphDefinition","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","valueFormatted","decimals","scaledDecimals","roundValue","getGradientForValue","colorData","Math","apply","absoluteDistance","valueDistanceFromMin","seriesItemAlias","overrides","regex","stringToJsRegex","matches","match","split","strVale","Number","trim","reverse","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","ctrl","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","undefined","key","targetElement","d3","select","selectAll","style","classed","parents","dElement","warn","parent","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {diagramEditor, displayEditor} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!'\r\n\r\nconst panelDefaults = {\r\n\t// other style overrides\r\n    seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true,\r\n\t\tgradient: {\r\n\t\t\tenabled: true,\r\n\t\t\tshow: true\r\n\t\t}\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tmaxWidth: false,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n    valueMaps: [\r\n      { value: 'null', op: '=', text: 'N/A' }\r\n    ],\r\n    content: 'graph LR\\n' +\r\n\t\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t\t'A --> C(Round Rect)\\n' +\r\n\t\t'B --> D{Rhombus}\\n' +\r\n\t\t'C --> D\\n',\r\n\tinit: {\r\n\t\tlogLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    \tcloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n\t\tstartOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n\t\tarrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n\t\tflowchart: {\r\n\t\t\thtmlLabels: true,\r\n\t\t\tuseMaxWidth: true\r\n\t\t},\r\n\t\tsequenceDiagram: {\r\n\t\t\tdiagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n\t\t\tdiagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n\t\t\tactorMargin: 50, // - Margin between actors\r\n\t\t\twidth: 150, // - Width of actor boxes\r\n\t\t\theight: 65, // - Height of actor boxes00000000001111\r\n\t\t\tboxMargin: 10, // - Margin around l01oop boxes\r\n\t\t\tboxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n\t\t\tnoteMargin: 10, // - margin around notes\r\n\t\t\tmessageMargin: 35, // - Space between messages\r\n\t\t\tmirrorActors: true, // - mirror actors under diagram\r\n\t\t\tbottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n\t\t\tuseMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n\t\t},\r\n\t\tgantt: {\r\n\t\t\ttitleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n\t\t\tbarHeight: 20, // - the height of the bars in the graph\r\n\t\t\tbarGap: 4, // - the margin between the different activities in the gantt diagram\r\n\t\t\ttopPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n\t\t\tleftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n\t\t\tgridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n\t\t\tfontSize: 11, // - font size ...\r\n\t\t\tfontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n\t\t\tnumberSectionStyles: 3, // - the number of alternating section styles\r\n\t\t\t/** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n\t\t},\r\n\t\t//classDiagram: {},\r\n    \t//info: {}\r\n\t}\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\t\r\n\t\tthis.panel.graphId = 'diagram_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.graphId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.initializeMermaid();\r\n\t}\r\n\t\r\n\tinitializeMermaid(){\r\n\t\tmermaidAPI.initialize(this.panel.init);\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\t\r\n\thandleParseError(err, hash){\r\n\t\tthis.error = 'Failed to parse diagram definition';\r\n\t\tthis.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n\t}\r\n\t\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t}\r\n\t\r\n\tgetDiagramContainer(){\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\t\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\t\tconsole.debug(this.series);\r\n\r\n\t\tvar data = {};\r\n\t\tthis.setValues(data);\r\n\t\tthis.updateDiagram(data);\r\n\t\tthis.svgData = data;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_')\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\t\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tupdateThresholds(){\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tchangeColor(colorIndex, color){\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\t\r\n\tremoveColor(colorIndex){\r\n\t\tthis.panel.colors.splice(colorIndex,1);\r\n\t}\r\n\t\r\n\taddColor(){\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\t\r\n\tclearDiagram(){\r\n\t\t$('#'+this.panel.graphId).remove();\r\n\t\tthis.svg = {};\r\n\t}\r\n\r\n\tupdateDiagram(data){\r\n\t\tif(this.panel.content.length > 0){\r\n\t\t\tthis.clearDiagram();\r\n\t\t\tvar graphDefinition = this.panel.content;\r\n\t\t\tthis.diagramType = mermaidAPI.detectType(graphDefinition);\r\n\t\t\tvar diagramContainer = $(document.getElementById(this.containerDivId));\r\n\t\t    \r\n\t\t\tvar renderCallback = function (svgCode, bindFunctions){\r\n\t\t\t\tif(svgCode == '') {\r\n\t\t\t\t\tdiagramContainer.html('There was a problem rendering the graph');\r\n\t\t\t\t} else {\r\n\t\t\t    \tdiagramContainer.html(svgCode);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n\t\t\tmermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\t}\r\n\t} // End updateDiagram()\r\n\t\r\n\tsetValues(data) {\r\n\t    if (this.series && this.series.length > 0) {\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar seriesItem = this.series[i];\r\n\t\t\t\tconsole.debug('setting values for series');\r\n\t\t\t\tconsole.debug(seriesItem);\r\n\t\t\t\tdata[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n\t\t\t\tvar lastPoint = _.last(seriesItem.datapoints);\r\n\t\t\t    var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\t\t\t\r\n\t\t\t\tif (this.panel.valueName === 'name') {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n\t\t\t\t} else if (_.isString(lastValue)) {\r\n\t\t\t        data[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n\t\t\t        //data[seriesItem.alias].flotpairs = seriesItem.flotpairs;\r\n\t\t\t\r\n\t\t\t        var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n\t\t\t        var formatFunc = kbn.valueFormats[this.panel.format];\r\n\t\t\t        data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t\t        data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.panel.legend.gradient.enabled){\r\n\t\t\t\t\tdata[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    }\r\n\t} // End setValues()\r\n\t\r\n\tgetGradientForValue(data, value){\r\n\t\tconsole.info('Getting gradient for value');\r\n\t\tconsole.debug(data);\r\n\t\tconsole.debug(value);\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin/absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.99 max\r\n\t\txPercent = Math.min(0.99, xPercent);\r\n\t\t// Get the larger number to clamp at 0.01 min\r\n\t\txPercent = Math.max(0.01, xPercent);\r\n\t\t\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\t\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\t\t\t\r\n\t\t\tif (this.panel.seriesOverrides[i]){\r\n\t\t\t\tvar regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n\t\t\t\tvar matches = seriesItemAlias.match(regex);\r\n\t\t\t\tif(matches && matches.length > 0){\r\n\t\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors;\r\n\t\tseriesItem.colorData = colorData;\r\n\t\t\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\t\t\r\n\t\treturn seriesItem;\r\n\t}\r\n\t\r\n\tinvertColorOrder() {\r\n\t    this.panel.colors.reverse();\r\n\t    this.refresh();\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n\t    if (_.isNumber(this.panel.decimals)) {\r\n\t      return {decimals: this.panel.decimals, scaledDecimals: null};\r\n\t    }\r\n\r\n\t    var delta = value / 2;\r\n\t    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\t\r\n\t    var magn = Math.pow(10, -dec),\r\n\t      norm = delta / magn, // norm is between 1.0 and 10.0\r\n\t      size;\r\n\t\r\n\t    if (norm < 1.5) {\r\n\t      size = 1;\r\n\t    } else if (norm < 3) {\r\n\t      size = 2;\r\n\t      // special case for 2.5, requires an extra decimal\r\n\t      if (norm > 2.25) {\r\n\t        size = 2.5;\r\n\t        ++dec;\r\n\t      }\r\n\t    } else if (norm < 7.5) {\r\n\t      size = 5;\r\n\t    } else {\r\n\t      size = 10;\r\n\t    }\r\n\t\r\n\t    size *= magn;\r\n\t\r\n\t    // reduce starting decimals if not needed\r\n\t    if (Math.floor(value) === value) { dec = 0; }\r\n\t\r\n\t    var result = {};\r\n\t    result.decimals = Math.max(0, dec);\r\n\t    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\t\r\n\t    return result;\r\n\t}\r\n\t\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar diagramElement = elem.find('.diagram');\r\n\t\tdiagramElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found diagramContainer');\r\n    \tconsole.debug(diagramContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n    \t\r\n\t    var canvas = elem.find('.canvas')[0];\r\n\t    ctrl.canvas = canvas;\r\n\t    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n\t    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n    \t\r\n    \tfunction render(){\r\n    \t\tsetElementHeight();\r\n    \t\tupdateCanvasStyle();\r\n    \t\tupdateStyle();\r\n    \t}\r\n    \t\r\n    \tfunction updateCanvasStyle(){\r\n\t    \tcanvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t\r\n\t\t\tvar grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\tvar colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n\t\t\tfor(var i=0; i<ctrl.panel.colors.length; i++){\r\n\t\t\t\tvar currentColor = ctrl.panel.colors[i];\r\n\t\t\t\tgrd.addColorStop(Math.min(colorWidth*i,1), currentColor);\r\n\t\t\t}\r\n\t\t\tcanvasContext.fillStyle = grd;\r\n\t\t\tcanvasContext.fillRect(0, 0, canvas.width, 3);\r\n    \t\tctrl.canvasContext = canvasContext;\r\n    \t\t\r\n\t\t\tgradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t\tgradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    \t}\r\n    \t\r\n\r\n    \t\r\n    \tfunction setElementHeight() {\r\n\t      //diagramContainer.css('height', ctrl.height + 'px');\r\n\t    }\r\n    \t\r\n    \tthis.events.on('render', function() {\r\n\t\t\trender();\r\n\t\t\tctrl.renderingCompleted();\r\n\t    });\r\n\t    \r\n\t    function updateStyle(){\r\n\t    \tvar data = ctrl.svgData;\r\n\t    \tctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n\t\t\tconsole.info('updating svg style');\r\n\t\t\tvar svg = $(document.getElementById(ctrl.panel.graphId));\r\n\t\t\t$(svg).css('min-width', $(svg).css('max-width')); \r\n\t\t\tif (ctrl.panel.maxWidth){\r\n\t\t\t\t$(svg).css('max-width', '100%');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(svg[0] === undefined){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var key in data){\r\n\t\t\t\tvar seriesItem = data[key];\r\n\t\t\t\t\r\n\t\t\t\t// Find nodes by ID if we can\r\n\t\t\t\tconsole.info('finding targetElement');\r\n\t\t\t\tvar targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n\t\t\t\t\r\n\t\t\t\tif(targetElement[0][0] !== null){ // probably a flowchart\r\n\t\t\t\t\ttargetElement.selectAll('rect,circle,poly').style('fill', seriesItem.color);\r\n\t\t\t\t\t// Add value text\r\n\t\t\t\t\tvar p = targetElement.select('div').append('p');\r\n\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.debug('finding element that contains text node: ' + key);\r\n\t\t\t\t\ttargetElement = $(svg).find('div:contains(\"'+key+'\")'); // maybe a flowchart with an alias text node\r\n\t\t\t\t\tif(targetElement.length > 0){\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('rect, circle, poly').css('fill', seriesItem.color);\r\n\t\t\t\t\t\tvar dElement = d3.select(targetElement[0]);\r\n\t\t\t\t\t\t // Add value text\r\n\t\t\t\t\t\tvar p = dElement.append('p');\r\n\t\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetElement = $(svg).find('text:contains(\"'+key+'\")'); // sequence diagram, gantt ?\r\n\t\t\t\t\t\tif(targetElement.length == 0){\r\n\t\t\t\t\t\t\tconsole.warn('couldnt not find a diagram node with id/text: ' + key);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttargetElement.parent().find('rect, circle, poly').css('fill', seriesItem.color);\r\n\t\t\t\t\t\ttargetElement.append('\\n' + seriesItem.valueFormatted);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconsole.debug(targetElement);\r\n\t\t\t\tconsole.info('set nodes:' + key + ' to color:' + seriesItem.color);\r\n\t\t\t}\r\n\t\t\t//return $(svg).html();\r\n\t\t} // End updateStyle()\r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i-1]) {\r\n\t\treturn data.colorMap[i];\r\n\t}\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent){\r\n\tvar x = canvas.width * xPercent;\r\n\tvar context = canvas.getContext(\"2d\");\r\n    var p = context.getImageData(x, 1, 1, 1).data; \r\n    var color = 'rgba('+[p[0] +','+ p[1] +','+ p[2] +','+ p[3]]+')';\r\n    return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tDiagramCtrl,\r\n\tDiagramCtrl as MetricsPanelCtrl\r\n};"]}