{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","panelDefaults","composites","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","mode","mermaidServiceUrl","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","seriesData","datapoints","alias","target","replace","unit","flotpairs","getFlotPairs","override","push","without","composite","ctrl","metrics","undefined","metric","thresholdCount","colorCount","refresh","colorIndex","splice","subItem","remove","svg","updateDiagram_cont","_this","graphDefinition","substituteHashPrefixedNotation","templateSrv","replaceWithText","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","clearDiagram","templatedURL","scopedVars","method","url","then","successCallback","response","call","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","name","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","nameOfMetric","getWorstSeries","series1","series2","worstSeries","series1thresholdLevel","getThresholdLevel","series2thresholdLevel","log","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","stringToJsRegex","split","strVale","Number","trim","slice","reverse","unitFormat","isNumber","delta","dec","floor","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","key","targetElement","d3","select","selectAll","style","div","fo","attr","classed","filter","parents","edgeElement","parent","addClass","dElement","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8sBA,WAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCC,YAAQC,KAAR,CAAc,yBAAd;AACAD,YAAQC,KAAR,CAAcH,IAAd;AACAE,YAAQC,KAAR,CAAcF,KAAd;AACA,SAAK,IAAIG,IAAIJ,KAAKK,UAAL,CAAgBC,MAA7B,EAAqCF,IAAI,CAAzC,EAA4CA,GAA5C,EAAiD;AAC/C,UAAIH,SAASD,KAAKK,UAAL,CAAgBD,IAAI,CAApB,CAAb,EAAqC;AACnC,eAAOJ,KAAKO,QAAL,CAAcH,CAAd,CAAP;AACD;AACF;AACD,WAAOI,EAAEC,KAAF,CAAQT,KAAKO,QAAb,CAAP;AACD;;AAED,WAASG,qBAAT,CAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAC/C,QAAIC,IAAIF,OAAOG,KAAP,GAAeF,QAAvB;AACA,QAAIG,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAd;AACA,QAAIC,IAAIF,QAAQG,YAAR,CAAqBL,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCb,IAAzC;AACA,QAAImB,QAAQ,UAAU,CAACF,EAAE,CAAF,IAAO,GAAP,GAAaA,EAAE,CAAF,CAAb,GAAoB,GAApB,GAA0BA,EAAE,CAAF,CAA1B,GAAiC,GAAjC,GAAuCA,EAAE,CAAF,CAAxC,CAAV,GAA0D,GAAtE;AACA,WAAOE,KAAP;AACD;;;;AA/tBMC,gB;;AACAC,S;;AAELC,sB,kBAAAA,gB;;AAGAC,mB,eAAAA,a;AACAC,mB,eAAAA,a;AACAC,qB,eAAAA,e;;AAEKjB,O;;;;;;;;;;;;;;;;;;;;;AAIDkB,mB,GAAgB;AACpBC,oBAAY,EADQ;AAEpB;AACAC,yBAAiB,EAHG;AAIpBvB,oBAAY,MAJQ;AAKpBwB,kBAAU,CALU,EAKP;AACbC,gBAAQ,CAAC,yBAAD,EAA4B,0BAA5B,EAAwD,wBAAxD,CANY;AAOpBC,gBAAQ;AACNC,gBAAM,IADA;AAENC,eAAK,IAFC;AAGNC,eAAK,IAHC;AAINC,eAAK,IAJC;AAKNC,mBAAS,IALH;AAMNC,iBAAO,IAND;AAONC,oBAAU;AACRC,qBAAS,IADD;AAERP,kBAAM;AAFE;AAPJ,SAPY;AAmBpBQ,uBAAe,GAnBK;AAoBpBC,qBAAa,CApBO;AAqBpBC,kBAAU,KArBU;AAsBpBC,uBAAe,WAtBK;AAuBpBC,gBAAQ,MAvBY;AAwBpBC,mBAAW,KAxBS;AAyBpBC,sBAAc,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,SAA/B,CAzBM;AA0BpBC,mBAAW,CAAC;AACV9C,iBAAO,MADG;AAEV+C,cAAI,GAFM;AAGVC,gBAAM;AAHI,SAAD,CA1BS;AA+BpBC,iBAAS,eACP,+CADO,GAEP,uBAFO,GAGP,oBAHO,GAIP,WAnCkB;AAoCpBC,cAAM,SApCc,EAoCH;AACjBC,2BAAmB,EArCC;AAsCpBC,cAAM;AACJC,oBAAU,CADN,EACS;AACbC,0BAAgB,KAFZ,EAEmB;AACvBC,uBAAa,KAHT,EAGgB;AACpBC,+BAAqB,IAJjB,EAIuB;AAC3BC,qBAAW;AACTC,wBAAY,IADH;AAETC,yBAAa;AAFJ,WALP;AASJC,2BAAiB;AACfC,4BAAgB,EADD,EACK;AACpBC,4BAAgB,EAFD,EAEK;AACpBC,yBAAa,EAHE,EAGE;AACjBlD,mBAAO,GAJQ,EAIH;AACZmD,oBAAQ,EALO,EAKH;AACZC,uBAAW,EANI,EAMA;AACfC,2BAAe,CAPA,EAOG;AAClBC,wBAAY,EARG,EAQC;AAChBC,2BAAe,EATA,EASI;AACnBC,0BAAc,IAVC,EAUK;AACpBC,6BAAiB,CAXF,EAWK;AACpBX,yBAAa,IAZE,EATb;AAuBJY,iBAAO;AACLC,4BAAgB,EADX,EACe;AACpBC,uBAAW,EAFN,EAEU;AACfC,oBAAQ,CAHH,EAGM;AACXC,wBAAY,EAJP,EAIW;AAChBC,yBAAa,EALR,EAKY;AACjBC,kCAAsB,EANjB,EAMqB;AAC1BC,sBAAU,EAPL,EAOS;AACdC,wBAAY,2BARP,EAQoC;AACzCC,iCAAqB,CAThB;AAvBH;AAtCc,O;;yDAmGhBC,W;;;AACJ,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4C;AAAA;;AAAA,iIACpCH,MADoC,EAC5BC,SAD4B;;AAE1C5E,YAAE+E,QAAF,CAAW,OAAKC,KAAhB,EAAuB9D,aAAvB;AACA,iBAAK4D,KAAL,GAAaA,KAAb;AACA,iBAAKE,KAAL,CAAWC,OAAX,GAAqB,aAAa,OAAKD,KAAL,CAAWE,EAA7C;AACA,iBAAKC,cAAL,GAAsB,eAAe,OAAKH,KAAL,CAAWC,OAAhD;AACA,iBAAKJ,IAAL,GAAYA,IAAZ;AACA,iBAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKG,cAAL,CAAoBD,IAApB,QAArC;AACA,iBAAKE,WAAL,GAAmB5E,IAAI6E,cAAJ,EAAnB;AACA,iBAAKC,iBAAL;AAX0C;AAY3C;;;;8CAEmB;AAClBC,uBAAWC,UAAX,CAAsB,KAAKb,KAAL,CAAWnC,IAAjC;AACA+C,uBAAWE,UAAX,GAAwB,KAAKC,gBAAL,CAAsBR,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;2CAEgBS,G,EAAKC,I,EAAM;AAC1B,iBAAKC,KAAL,GAAa,oCAAb;AACA,iBAAKC,SAAL,GAAiB,KAAKtB,IAAL,CAAUuB,WAAV,CAAsB,oCAAoCJ,GAApC,GAA0C,QAAhE,CAAjB;AACD;;;2CAEgB;AACf,iBAAKK,YAAL,CAAkB,SAAlB,EAA6BtF,aAA7B,EAA4C,CAA5C;AACA,iBAAKsF,YAAL,CAAkB,SAAlB,EAA6BrF,aAA7B,EAA4C,CAA5C;AACA,iBAAKqF,YAAL,CAAkB,mBAAlB,EAAuCpF,eAAvC,EAAwD,CAAxD;AACD;;;gDAEqB;AACpB,mBAAOqF,EAAEC,SAASC,cAAT,CAAwB,KAAKrB,cAA7B,CAAF,CAAP;AACD;;;yCAEcsB,Q,EAAU;AACvB/G,oBAAQC,KAAR,CAAc,eAAd;AACAD,oBAAQC,KAAR,CAAc8G,QAAd;AACA,iBAAKC,MAAL,GAAcD,SAASE,GAAT,CAAa,KAAKC,aAAL,CAAmBrB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA7F,oBAAQC,KAAR,CAAc,2BAAd;AACAD,oBAAQC,KAAR,CAAc,KAAK+G,MAAnB;;AAEA,gBAAIlH,OAAO,EAAX;AACA,iBAAKqH,SAAL,CAAerH,IAAf;AACA,iBAAKsH,aAAL,CAAmBtH,IAAnB;AACA,iBAAKuH,OAAL,GAAevH,IAAf;AACA,iBAAKwH,MAAL;AACD;;;wCAEaC,U,EAAY;AACxB,gBAAIP,SAAS,IAAI9F,UAAJ,CAAe;AAC1BsG,0BAAYD,WAAWC,UADG;AAE1BC,qBAAOF,WAAWG,MAAX,CAAkBC,OAAlB,CAA0B,gBAA1B,EAA4C,GAA5C,CAFmB;AAG1BC,oBAAML,WAAWK;AAHS,aAAf,CAAb;AAKAZ,mBAAOa,SAAP,GAAmBb,OAAOc,YAAP,CAAoB,KAAKxC,KAAL,CAAW7C,aAA/B,CAAnB;AACA,mBAAOuE,MAAP;AACD;;;4CAEiBe,Q,EAAU;AAC1B,iBAAKzC,KAAL,CAAW5D,eAAX,CAA2BsG,IAA3B,CAAgCD,YAAY,EAA5C;AACD;;;+CAEoBA,Q,EAAU;AAC7B,iBAAKzC,KAAL,CAAW5D,eAAX,GAA6BpB,EAAE2H,OAAF,CAAU,KAAK3C,KAAL,CAAW5D,eAArB,EAAsCqG,QAAtC,CAA7B;AACA,iBAAKT,MAAL;AACD;;;uCAEYY,S,EAAW;AACtB,iBAAK5C,KAAL,CAAW7D,UAAX,CAAsBuG,IAAtB,CAA2BE,aAAa,EAAxC;AACD;;;0CACeA,S,EAAW;AACzB,iBAAK5C,KAAL,CAAW7D,UAAX,GAAwBnB,EAAE2H,OAAF,CAAU,KAAK3C,KAAL,CAAW7D,UAArB,EAAiCyG,SAAjC,CAAxB;AACA,iBAAKZ,MAAL;AACD;;;wDAC6B;AAC5B,mBAAOhH,EAAE2G,GAAF,CAAM,KAAKhC,MAAL,CAAYkD,IAAZ,CAAiBnB,MAAvB,EAA+B,UAASA,MAAT,EAAiB;AACrD,qBAAOA,OAAOS,KAAd;AACD,aAFM,CAAP;AAGD;;;+CAEoBS,S,EAAW;AAC9B,gBAAIA,UAAUE,OAAV,KAAsBC,SAA1B,EAAqC;AACnCH,wBAAUE,OAAV,GAAoB,CAAC,EAAD,CAApB;AACD,aAFD,MAEO;AACLF,wBAAUE,OAAV,CAAkBJ,IAAlB,CAAuB,EAAvB;AACD;AACF;;;oDACyBE,S,EAAWI,M,EAAQ;AAC3CJ,sBAAUE,OAAV,GAAoB9H,EAAE2H,OAAF,CAAUC,UAAUE,OAApB,EAA6BE,MAA7B,CAApB;AACD;;;6CAEkB;AACjB,gBAAIC,iBAAiB,KAAKjD,KAAL,CAAWnF,UAAX,CAAsBC,MAA3C;AACA,gBAAIoI,aAAa,KAAKlD,KAAL,CAAW1D,MAAX,CAAkBxB,MAAnC;AACA,iBAAKqI,OAAL;AACD;;;sCAEWC,U,EAAYzH,K,EAAO;AAC7B,iBAAKqE,KAAL,CAAW1D,MAAX,CAAkB8G,UAAlB,IAAgCzH,KAAhC;AACD;;;sCAEWyH,U,EAAY;AACtB,iBAAKpD,KAAL,CAAW1D,MAAX,CAAkB+G,MAAlB,CAAyBD,UAAzB,EAAqC,CAArC;AACD;;;qCAEU;AACT,iBAAKpD,KAAL,CAAW1D,MAAX,CAAkBoG,IAAlB,CAAuB,wBAAvB;AACD;;;wCAEaY,O,EAAS;AACrB,iBAAKtD,KAAL,CAAW5C,MAAX,GAAoBkG,QAAQ7I,KAA5B;AACA,iBAAKuH,MAAL;AACD;;;yCAEc;AACbV,cAAE,MAAM,KAAKtB,KAAL,CAAWC,OAAnB,EAA4BsD,MAA5B;AACA,iBAAKC,GAAL,GAAW,EAAX;AACD;;;wCAEahJ,I,EAAM;AAClB,gBAAI,KAAKwF,KAAL,CAAWtC,OAAX,CAAmB5C,MAAnB,GAA4B,CAAhC,EAAmC;AAAA,kBAMxB2I,kBANwB,GAMjC,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,eAAnC,EAAoD;AAClD;AACA;AACA;AACA;AACAA,kCAAkBD,MAAME,8BAAN,CAAqCD,eAArC,EAAsDnJ,IAAtD,CAAlB;AACAmJ,kCAAkBD,MAAMG,WAAN,CAAkBC,eAAlB,CAAkCH,eAAlC,CAAlB;AACAD,sBAAMK,WAAN,GAAoBnD,WAAWoD,UAAX,CAAsBL,eAAtB,CAApB;AACA,oBAAIM,mBAAmB3C,EAAEC,SAASC,cAAT,CAAwBkC,MAAMvD,cAA9B,CAAF,CAAvB;;AAEA,oBAAI+D,iBAAiB,SAAjBA,cAAiB,CAASC,OAAT,EAAkBC,aAAlB,EAAiC;AACpD,sBAAID,YAAY,EAAhB,EAAoB;AAClBF,qCAAiBI,IAAjB,CAAsB,yCAAtB;AACD,mBAFD,MAEO;AACLJ,qCAAiBI,IAAjB,CAAsBF,OAAtB;AACAC,kCAAcH,iBAAiB,CAAjB,CAAd;AACD;AACF,iBAPD;AAQA;AACArD,2BAAWoB,MAAX,CAAkB0B,MAAM1D,KAAN,CAAYC,OAA9B,EAAuC0D,eAAvC,EAAwDO,cAAxD;AACD,eA1BgC;;AACjC,mBAAKI,YAAL;;AAEA,kBAAI3G,OAAO,KAAKqC,KAAL,CAAWrC,IAAtB;AACA,kBAAI4G,eAAe,KAAKV,WAAL,CAAiBxB,OAAjB,CAAyB,KAAKrC,KAAL,CAAWpC,iBAApC,EAAuD,KAAKoC,KAAL,CAAWwE,UAAlE,CAAnB;;AAwBA,kBAAI7G,QAAQ,KAAZ,EAAmB;AACjB,oBAAI+F,QAAQ,IAAZ;AACA,qBAAK5D,KAAL,CAAW;AACT2E,0BAAQ,KADC;AAETC,uBAAKH;AAFI,iBAAX,EAGGI,IAHH,CAGQ,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACzC;AACA;AACApB,qCAAmBqB,IAAnB,CAAwBpB,KAAxB,EAA+BmB,SAASrK,IAAxC;AACD,iBAPD,EAOG,SAASuK,aAAT,CAAuBF,QAAvB,EAAiC;AAClCnK,0BAAQsK,IAAR,CAAa,OAAb,EAAsBH,QAAtB;AACD,iBATD;AAUD,eAZD,MAYO;AACLpB,mCAAmB,IAAnB,EAAyB,KAAKzD,KAAL,CAAWtC,OAApC;AACD;AACF;AACF;;;yDAwB8BiG,e,EAAiBnJ,I,EAAM;AACpD;AACA;AACA,gBAAIyK,UAAUtB,gBAAgBuB,KAAhB,CAAsB,mBAAtB,CAAd;AACA,gBAAID,YAAY,IAAhB,EAAsB,OAAOtB,eAAP;AACtB;AACA,iBAAK,IAAI/I,IAAI,CAAb,EAAgBA,IAAIqK,QAAQnK,MAA5B,EAAoCF,GAApC,EAAyC;AACvC,kBAAIuK,SAASF,QAAQrK,CAAR,CAAb;AACA,kBAAIwK,YAAYD,OAAO,CAAP,CAAhB;AACAA,uBAASA,OAAOE,SAAP,CAAiB,CAAjB,CAAT;AACA;AACA,mBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKtF,KAAL,CAAW7D,UAAX,CAAsBrB,MAA1C,EAAkDwK,GAAlD,EAAuD;AACrD,oBAAIC,aAAa,KAAKvF,KAAL,CAAW7D,UAAX,CAAsBmJ,CAAtB,CAAjB;AACA,oBAAIC,WAAWC,IAAX,KAAoBL,MAAxB,EAAgC;AAC9B;AACA,sBAAIM,iBAAiB,IAArB;AACA,0BAAQL,SAAR;AACE,yBAAK,GAAL;AACEK,uCAAiBjL,KAAK+K,WAAWC,IAAhB,EAAsB/K,KAAvC;AACAkJ,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBjL,KAAK+K,WAAWC,IAAhB,EAAsBE,2BAAvC;AACA/B,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBjL,KAAK+K,WAAWC,IAAhB,EAAsBG,cAAvC;AACAhC,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBjL,KAAK+K,WAAWC,IAAhB,EAAsBI,wBAAvC;AACAjC,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AAhBJ;AAkBD;AACF;AACD;AACA,mBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKnE,MAAL,CAAY5G,MAAhC,EAAwC+K,GAAxC,EAA6C;AAC3C,oBAAIC,aAAa,KAAKpE,MAAL,CAAYmE,CAAZ,CAAjB;AACA,oBAAIC,WAAW3D,KAAX,KAAqBgD,MAAzB,EAAiC;AAC/B,sBAAIM,iBAAiB,IAArB;AACA,0BAAQL,SAAR;AACE,yBAAK,GAAL;AACEK,uCAAiBjL,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAxC;AACAkJ,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBjL,KAAKsL,WAAW3D,KAAhB,EAAuBwD,cAAxC;AACAhC,wCAAkBA,gBAAgBtB,OAAhB,CAAwB,MAAM8C,MAA9B,EAAsCM,cAAtC,CAAlB;AACA;AARJ;AAUD;AACF;AACF;AACD,mBAAO9B,eAAP;AACD;;;wCAEanJ,I,EAAMmJ,e,EAAiB;AACnCjJ,oBAAQC,KAAR,CAAcgJ,eAAd;AACAA,8BAAkB,KAAKE,WAAL,CAAiBxB,OAAjB,CAAyBsB,eAAzB,CAAlB;AACAjJ,oBAAQC,KAAR,CAAcgJ,eAAd;AACA,iBAAKI,WAAL,GAAmBnD,WAAWoD,UAAX,CAAsBL,eAAtB,CAAnB;AACA,gBAAIM,mBAAmB3C,EAAEC,SAASC,cAAT,CAAwB,KAAKrB,cAA7B,CAAF,CAAvB;;AAEA,gBAAI+D,iBAAiB,SAAjBA,cAAiB,CAASC,OAAT,EAAkBC,aAAlB,EAAiC;AACpD,kBAAID,WAAW,EAAf,EAAmB;AACjBF,iCAAiBI,IAAjB,CAAsB,yCAAtB;AACD,eAFD,MAEO;AACLJ,iCAAiBI,IAAjB,CAAsBF,OAAtB;AACAC,8BAAcH,iBAAiB,CAAjB,CAAd;AACD;AACF,aAPD;AAQA;AACArD,uBAAWoB,MAAX,CAAkB,KAAKhC,KAAL,CAAWC,OAA7B,EAAsC0D,eAAtC,EAAuDO,cAAvD;AACA,iBAAKnC,OAAL,GAAevH,IAAf;AACA,iBAAKwH,MAAL;AACD;;;oCAGSxH,I,EAAM;AACd,gBAAI,KAAKkH,MAAL,IAAe,KAAKA,MAAL,CAAY5G,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAI,KAAK8G,MAAL,CAAY5G,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3C,oBAAIkL,aAAa,KAAKpE,MAAL,CAAY9G,CAAZ,CAAjB;AACAF,wBAAQC,KAAR,CAAc,2BAAd;AACAD,wBAAQC,KAAR,CAAcmL,UAAd;AACAtL,qBAAKsL,WAAW3D,KAAhB,IAAyB,KAAK4D,cAAL,CAAoBD,WAAW3D,KAA/B,CAAzB;AACA,oBAAI6D,YAAYhL,EAAEiL,IAAF,CAAOH,WAAW5D,UAAlB,CAAhB;AACA,oBAAIgE,YAAYlL,EAAEmL,OAAF,CAAUH,SAAV,IAAuBA,UAAU,CAAV,CAAvB,GAAsC,IAAtD;;AAEA,oBAAI,KAAKhG,KAAL,CAAW3C,SAAX,KAAyB,MAA7B,EAAqC;AACnC7C,uBAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAvB,GAA+B,CAA/B;AACAD,uBAAKsL,WAAW3D,KAAhB,EAAuBiE,YAAvB,GAAsC,CAAtC;AACA5L,uBAAKsL,WAAW3D,KAAhB,EAAuBkE,aAAvB,GAAuCP,WAAW3D,KAAlD;AACD,iBAJD,MAIO,IAAInH,EAAEsL,QAAF,CAAWJ,SAAX,CAAJ,EAA2B;AAChC1L,uBAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAvB,GAA+B,CAA/B;AACAD,uBAAKsL,WAAW3D,KAAhB,EAAuBkE,aAAvB,GAAuCrL,EAAEuL,MAAF,CAASL,SAAT,CAAvC;AACA1L,uBAAKsL,WAAW3D,KAAhB,EAAuBiE,YAAvB,GAAsC,CAAtC;AACD,iBAJM,MAIA;AACL5L,uBAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAvB,GAA+BqL,WAAWU,KAAX,CAAiBhM,KAAKsL,WAAW3D,KAAhB,EAAuB9E,SAAxC,CAA/B;AACA,sBAAIoJ,cAAc,KAAKC,mBAAL,CAAyBlM,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAhD,CAAlB;AACA,sBAAIkM,aAAa9K,IAAI+K,YAAJ,CAAiBpM,KAAKsL,WAAW3D,KAAhB,EAAuB/E,MAAxC,CAAjB;AACA;AACA5C,uBAAKsL,WAAW3D,KAAhB,EAAuBwD,cAAvB,GAAwCgB,WAAWnM,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAlC,EAAyCgM,YAAYpK,QAArD,EAA+DoK,YAAYI,cAA3E,CAAxC;AACArM,uBAAKsL,WAAW3D,KAAhB,EAAuBiE,YAAvB,GAAsCvK,IAAIiL,UAAJ,CAAetM,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAtC,EAA6CgM,YAAYpK,QAAzD,CAAtC;AACD;AACD,oBAAI,KAAK2D,KAAL,CAAWzD,MAAX,CAAkBO,QAAlB,CAA2BC,OAA/B,EAAwC;AACtCvC,uBAAKsL,WAAW3D,KAAhB,EAAuBxG,KAAvB,GAA+B,KAAKoL,mBAAL,CAAyBvM,KAAKsL,WAAW3D,KAAhB,EAAuB6E,SAAhD,EAA2DxM,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAAlF,CAA/B;AACD,iBAFD,MAEO;AACLD,uBAAKsL,WAAW3D,KAAhB,EAAuBxG,KAAvB,GAA+BpB,iBAAiBC,KAAKsL,WAAW3D,KAAhB,EAAuB6E,SAAxC,EAAmDxM,KAAKsL,WAAW3D,KAAhB,EAAuB1H,KAA1E,CAA/B;AACD;AACF;AACF;AACD;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,KAAKoF,KAAL,CAAW7D,UAAX,CAAsBrB,MAA1C,EAAkDF,GAAlD,EAAuD;AACrD,kBAAI2K,aAAa,KAAKvF,KAAL,CAAW7D,UAAX,CAAsBvB,CAAtB,CAAjB;AACA,kBAAIqM,qBAAqB,IAAzB;AACA,kBAAIC,yBAAyB,IAA7B;AACA,mBAAK,IAAI5B,IAAI,CAAb,EAAgBA,IAAIC,WAAWzC,OAAX,CAAmBhI,MAAvC,EAA+CwK,GAA/C,EAAoD;AAClD,oBAAI6B,UAAU5B,WAAWzC,OAAX,CAAmBwC,CAAnB,CAAd;AACA,oBAAI8B,aAAaD,QAAQC,UAAzB;AACA,oBAAItB,aAAatL,KAAK4M,UAAL,CAAjB;AACA;AACAtB,2BAAWuB,YAAX,GAA0BD,UAA1B;AACA;AACA,oBAAIH,uBAAuB,IAA3B,EAAiC;AAC/BA,uCAAqBnB,UAArB;AACAoB,2CAAyBpB,WAAWuB,YAApC;AACD,iBAHD,MAGO;AACLJ,uCAAqB,KAAKK,cAAL,CAAoBL,kBAApB,EAAwCnB,UAAxC,CAArB;AACAoB,2CAAyBD,mBAAmBI,YAA5C;AACD;AACD,uBAAOvB,WAAWuB,YAAlB;AACD;AACD;AACAJ,iCAAmBrB,wBAAnB,GAA8CsB,yBAAyB,IAAzB,GAAgCD,mBAAmBtB,cAAjG;AACAsB,iCAAmBvB,2BAAnB,GAAiDwB,yBAAyB,IAAzB,GAAgCD,mBAAmBxM,KAApG;AACA;AACA;AACAD,mBAAK+K,WAAWC,IAAhB,IAAwByB,kBAAxB;AACD;AACF;;;yCAEcM,O,EAASC,O,EAAS;AAC/B,gBAAIC,cAAcF,OAAlB;AACA,gBAAIG,wBAAwB,KAAKC,iBAAL,CAAuBJ,OAAvB,CAA5B;AACA,gBAAIK,wBAAwB,KAAKD,iBAAL,CAAuBH,OAAvB,CAA5B;AACA9M,oBAAQmN,GAAR,CAAY,8BAA8BH,qBAA1C;AACAhN,oBAAQmN,GAAR,CAAY,8BAA8BD,qBAA1C;AACA,gBAAIA,wBAAwBF,qBAA5B,EAAmD;AACjD;AACAD,4BAAcD,OAAd;AACD;AACD,mBAAOC,WAAP;AACD;;;4CAGiB/F,M,EAAQ;AACxB;AACA,gBAAIoG,iBAAiB,CAArB;AACA,gBAAIrN,QAAQiH,OAAOjH,KAAnB;AACA,gBAAII,aAAa6G,OAAOsF,SAAP,CAAiBnM,UAAlC;AACA;AACA,gBAAIA,eAAekI,SAAnB,EAA8B;AAC5B,qBAAO+E,cAAP;AACD;AACD;AACA,gBAAIjN,WAAWC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,qBAAOgN,cAAP;AACD;AACD,gBAAIrN,SAASI,WAAW,CAAX,CAAb,EAA4B;AAC1B;AACAiN,+BAAiB,CAAjB;AACD;AACD,gBAAIrN,SAASI,WAAW,CAAX,CAAb,EAA4B;AAC1B;AACAiN,+BAAiB,CAAjB;AACD;AACD,mBAAOA,cAAP;AACD;;;8CAEmBtN,I,EAAMC,K,EAAO;AAC/BC,oBAAQC,KAAR,CAAc,4BAAd;AACAD,oBAAQC,KAAR,CAAcH,IAAd;AACAE,oBAAQC,KAAR,CAAcF,KAAd;AACA,gBAAIgC,MAAMsL,KAAKtL,GAAL,CAASuL,KAAT,CAAeD,IAAf,EAAqBvN,KAAKK,UAA1B,CAAV;AACA,gBAAI6B,MAAMqL,KAAKrL,GAAL,CAASsL,KAAT,CAAeD,IAAf,EAAqBvN,KAAKK,UAA1B,CAAV;AACA,gBAAIoN,mBAAmBvL,MAAMD,GAA7B;AACA,gBAAIyL,uBAAuBzN,QAAQgC,GAAnC;AACA,gBAAIrB,WAAW8M,uBAAuBD,gBAAtC;AACA;AACA7M,uBAAW2M,KAAKtL,GAAL,CAAS,KAAT,EAAgBrB,QAAhB,CAAX;AACA;AACAA,uBAAW2M,KAAKrL,GAAL,CAAS,KAAT,EAAgBtB,QAAhB,CAAX;AACA,gBAAIZ,KAAK2N,YAAT,EAAuB;AACrB/M,yBAAW,IAAIA,QAAf;AACD;;AAED,mBAAOF,sBAAsB,KAAKC,MAA3B,EAAmCC,QAAnC,CAAP;AACD;;;yCAEcgN,e,EAAiB;AAC9B,gBAAItC,aAAa,EAAjB;AAAA,gBACEkB,YAAY,EADd;AAAA,gBAEEqB,YAAY,EAFd;;AAIA3N,oBAAQC,KAAR,CAAc,mCAAd;AACAD,oBAAQC,KAAR,CAAcyN,eAAd;AACA1N,oBAAQC,KAAR,CAAc,KAAKqF,KAAL,CAAW5D,eAAzB;AACA,iBAAK,IAAIxB,IAAI,CAAb,EAAgBA,KAAK,KAAKoF,KAAL,CAAW5D,eAAX,CAA2BtB,MAAhD,EAAwDF,GAAxD,EAA6D;AAC3DF,sBAAQC,KAAR,CAAc,YAAd;AACAD,sBAAQC,KAAR,CAAc,KAAKqF,KAAL,CAAW5D,eAAX,CAA2BxB,CAA3B,CAAd;;AAEA,kBAAI,KAAKoF,KAAL,CAAW5D,eAAX,CAA2BxB,CAA3B,CAAJ,EAAmC;AACjC,oBAAI0N,QAAQzM,IAAI0M,eAAJ,CAAoB,KAAKvI,KAAL,CAAW5D,eAAX,CAA2BxB,CAA3B,EAA8BuH,KAAlD,CAAZ;AACA,oBAAI8C,UAAUmD,gBAAgBlD,KAAhB,CAAsBoD,KAAtB,CAAd;AACA,oBAAIrD,WAAWA,QAAQnK,MAAR,GAAiB,CAAhC,EAAmC;AACjCuN,8BAAY,KAAKrI,KAAL,CAAW5D,eAAX,CAA2BxB,CAA3B,CAAZ;AACD;AACF;AACF;AACDoM,sBAAUnM,UAAV,GAAuB,CAACwN,UAAUxN,UAAV,IAAwB,KAAKmF,KAAL,CAAWnF,UAApC,EAAgD2N,KAAhD,CAAsD,GAAtD,EAA2D7G,GAA3D,CAA+D,UAAS8G,OAAT,EAAkB;AACtG,qBAAOC,OAAOD,QAAQE,IAAR,EAAP,CAAP;AACD,aAFsB,CAAvB;AAGA3B,sBAAUjM,QAAV,GAAqB,KAAKiF,KAAL,CAAW1D,MAAX,CAAkBsM,KAAlB,EAArB;AACA5B,sBAAUmB,YAAV,GAAyBE,UAAUF,YAAV,IAA0B,KAAnD;AACA,gBAAInB,UAAUmB,YAAd,EAA4B;AAC1BnB,wBAAUjM,QAAV,CAAmB8N,OAAnB;AACD;AACD/C,uBAAWkB,SAAX,GAAuBA,SAAvB;;AAEAlB,uBAAWzI,SAAX,GAAuBgL,UAAUhL,SAAV,IAAuB,KAAK2C,KAAL,CAAW3C,SAAzD;;AAEAyI,uBAAW1I,MAAX,GAAoBiL,UAAUS,UAAV,IAAwB,KAAK9I,KAAL,CAAW5C,MAAvD;AACA,mBAAO0I,UAAP;AACD;;;6CAEkB;AACjB,iBAAK9F,KAAL,CAAW1D,MAAX,CAAkBuM,OAAlB;AACA,iBAAK1F,OAAL;AACD;;;8CAEmB1I,K,EAAO;AACzB;AACA,gBAAIO,EAAE+N,QAAF,CAAW,KAAK/I,KAAL,CAAW3D,QAAtB,CAAJ,EAAqC;AACnC,qBAAO;AACLA,0BAAU,KAAK2D,KAAL,CAAW3D,QADhB;AAELwK,gCAAgB;AAFX,eAAP;AAID;;AAED,gBAAImC,QAAQvO,QAAQ,CAApB;AACA,gBAAIwO,MAAM,CAAClB,KAAKmB,KAAL,CAAWnB,KAAKF,GAAL,CAASmB,KAAT,IAAkBjB,KAAKoB,IAAlC,CAAX;;AAEA,gBAAIC,OAAOrB,KAAKsB,GAAL,CAAS,EAAT,EAAa,CAACJ,GAAd,CAAX;AAAA,gBACEK,OAAON,QAAQI,IADjB;AAAA,gBACuB;AACrBG,gBAFF;;AAIA,gBAAID,OAAO,GAAX,EAAgB;AACdC,qBAAO,CAAP;AACD,aAFD,MAEO,IAAID,OAAO,CAAX,EAAc;AACnBC,qBAAO,CAAP;AACA;AACA,kBAAID,OAAO,IAAX,EAAiB;AACfC,uBAAO,GAAP;AACA,kBAAEN,GAAF;AACD;AACF,aAPM,MAOA,IAAIK,OAAO,GAAX,EAAgB;AACrBC,qBAAO,CAAP;AACD,aAFM,MAEA;AACLA,qBAAO,EAAP;AACD;;AAEDA,oBAAQH,IAAR;;AAEA;AACA,gBAAIrB,KAAKmB,KAAL,CAAWzO,KAAX,MAAsBA,KAA1B,EAAiC;AAC/BwO,oBAAM,CAAN;AACD;;AAED,gBAAIO,SAAS,EAAb;AACAA,mBAAOnN,QAAP,GAAkB0L,KAAKrL,GAAL,CAAS,CAAT,EAAYuM,GAAZ,CAAlB;AACAO,mBAAO3C,cAAP,GAAwB2C,OAAOnN,QAAP,GAAkB0L,KAAKmB,KAAL,CAAWnB,KAAKF,GAAL,CAAS0B,IAAT,IAAiBxB,KAAKoB,IAAjC,CAAlB,GAA2D,CAAnF;;AAEA,mBAAOK,MAAP;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAO9G,I,EAAM;AAC7B,gBAAIgB,cAAc,KAAKA,WAAvB;AACA,gBAAI+F,iBAAiBF,KAAKG,IAAL,CAAU,UAAV,CAArB;AACAD,2BAAeE,MAAf,CAAsB,cAAcjH,KAAK1C,cAAnB,GAAoC,UAA1D;AACA,gBAAI8D,mBAAmB3C,EAAEC,SAASC,cAAT,CAAwBqB,KAAK1C,cAA7B,CAAF,CAAvB;AACAzF,oBAAQC,KAAR,CAAc,wBAAd;AACAD,oBAAQC,KAAR,CAAcsJ,gBAAd;AACAyF,iBAAKK,GAAL,CAAS,QAAT,EAAmBlH,KAAKpE,MAAL,GAAc,IAAjC;;AAEA,gBAAItD,SAASuO,KAAKG,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAb;AACAhH,iBAAK1H,MAAL,GAAcA,MAAd;AACA,gBAAI6O,mBAAmBN,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;AACA,gBAAII,mBAAmBP,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;;AAEA,qBAAS7H,MAAT,GAAkB;AAChBkI;AACAC;AACAC;AACD;;AAED,qBAASD,iBAAT,GAA6B;AAC3BhP,qBAAOG,KAAP,GAAeyM,KAAKrL,GAAL,CAASkN,eAAe,CAAf,EAAkBS,WAA3B,EAAwC,GAAxC,CAAf;AACA,kBAAIC,gBAAgBnP,OAAOK,UAAP,CAAkB,IAAlB,CAApB;AACA8O,4BAAcC,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BpP,OAAOG,KAArC,EAA4CH,OAAOsD,MAAnD;;AAEA,kBAAI+L,MAAMF,cAAcG,oBAAd,CAAmC,CAAnC,EAAsC,CAAtC,EAAyCtP,OAAOG,KAAhD,EAAuD,CAAvD,CAAV;AACA,kBAAIoP,aAAa,IAAI3C,KAAKrL,GAAL,CAASmG,KAAK7C,KAAL,CAAW1D,MAAX,CAAkBxB,MAA3B,EAAmC,CAAnC,CAArB;AACA,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIiI,KAAK7C,KAAL,CAAW1D,MAAX,CAAkBxB,MAAtC,EAA8CF,GAA9C,EAAmD;AACjD,oBAAI+P,eAAe9H,KAAK7C,KAAL,CAAW1D,MAAX,CAAkB1B,CAAlB,CAAnB;AACA4P,oBAAII,YAAJ,CAAiB7C,KAAKtL,GAAL,CAASiO,aAAa9P,CAAtB,EAAyB,CAAzB,CAAjB,EAA8C+P,YAA9C;AACD;AACDL,4BAAcO,SAAd,GAA0BL,GAA1B;AACAF,4BAAcQ,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B3P,OAAOG,KAApC,EAA2C,CAA3C;AACAuH,mBAAKyH,aAAL,GAAqBA,aAArB;;AAEAN,+BAAiBe,SAAjB,GAA6BhD,KAAKrL,GAAL,CAASsL,KAAT,CAAeD,IAAf,EAAqBlF,KAAK7C,KAAL,CAAWnF,UAAX,CAAsB2N,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACAyB,+BAAiBc,SAAjB,GAA6BhD,KAAKtL,GAAL,CAASuL,KAAT,CAAeD,IAAf,EAAqBlF,KAAK7C,KAAL,CAAWnF,UAAX,CAAsB2N,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACD;;AAID,qBAAS0B,gBAAT,GAA4B;AAC1B;AACD;;AAED,iBAAK9J,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAClC2B;AACAa,mBAAKmI,kBAAL;AACD,aAHD;;AAKA,qBAASZ,WAAT,GAAuB;AACrB,kBAAI5P,OAAOqI,KAAKd,OAAhB;AACAc,mBAAKd,OAAL,GAAe,EAAf,CAFqB,CAEF;AACnBrH,sBAAQC,KAAR,CAAc,oBAAd;AACA,kBAAI6I,MAAMlC,EAAEC,SAASC,cAAT,CAAwBqB,KAAK7C,KAAL,CAAWC,OAAnC,CAAF,CAAV;AACAqB,gBAAEkC,GAAF,EAAOuG,GAAP,CAAW,WAAX,EAAwBzI,EAAEkC,GAAF,EAAOuG,GAAP,CAAW,WAAX,CAAxB;AACA,kBAAIlH,KAAK7C,KAAL,CAAW9C,QAAf,EAAyB;AACvBoE,kBAAEkC,GAAF,EAAOuG,GAAP,CAAW,WAAX,EAAwB,MAAxB;AACD;;AAED,kBAAIvG,IAAI,CAAJ,MAAWT,SAAf,EAA0B;AACxB;AACD;;AAED,mBAAK,IAAIkI,GAAT,IAAgBzQ,IAAhB,EAAsB;AACpB,oBAAIsL,aAAatL,KAAKyQ,GAAL,CAAjB;;AAEA;AACA;AACA,oBAAIC,gBAAgBC,GAAGC,MAAH,CAAU5H,IAAI,CAAJ,EAAOhC,cAAP,CAAsByJ,GAAtB,CAAV,CAApB,CALoB,CAKuC;;AAE3D,oBAAIC,cAAc,CAAd,EAAiB,CAAjB,MAAwB,IAA5B,EAAkC;AAAE;AAClCA,gCAAcG,SAAd,CAAwB,qBAAxB,EAA+CC,KAA/C,CAAqD,MAArD,EAA6DxF,WAAWnK,KAAxE;;AAEA,sBAAI4P,MAAML,cAAcE,MAAd,CAAqB,KAArB,CAAV;AACA,sBAAII,KAAKN,cAAcE,MAAd,CAAqB,eAArB,CAAT;AACA;AACAI,qBAAGC,IAAH,CAAQ,QAAR,EAAkB,EAAlB;AACA;AACA,sBAAIhQ,IAAI8P,IAAIzB,MAAJ,CAAW,GAAX,CAAR;AACArO,oBAAEiQ,OAAF,CAAU,eAAV;AACAjQ,oBAAE6P,KAAF,CAAQ,kBAAR,EAA4BxF,WAAWnK,KAAvC;AACAF,oBAAE4I,IAAF,CAAOyB,WAAWH,cAAlB;AACD,iBAZD,MAYO;AACLjL,0BAAQC,KAAR,CAAc,uCAAuCsQ,GAArD;AACA;AACAC,kCAAgB5J,EAAEkC,GAAF,EAAOqG,IAAP,CAAY,mBAAmBoB,GAAnB,GAAyB,IAArC,EAA2CU,MAA3C,CAAkD,YAAW;AAC3E;AACA,2BAAOrK,EAAE,IAAF,EAAQmK,IAAR,CAAa,IAAb,MAAuBR,GAA9B;AACD,mBAHe,CAAhB;AAIA,sBAAIC,cAAcpQ,MAAd,GAAuB,CAA3B,EAA8B;AAC5BoQ,kCAAcU,OAAd,CAAsB,OAAtB,EAA+B/B,IAA/B,CAAoC,uBAApC,EAA6DE,GAA7D,CAAiE,MAAjE,EAAyEjE,WAAWnK,KAApF;AACA;AACAuP,kCAAcU,OAAd,CAAsB,OAAtB,EAA+B/B,IAA/B,CAAoC,eAApC,EAAqD4B,IAArD,CAA0D,QAA1D,EAAoE,EAApE;AACA;AACA,wBAAII,cAAcX,cAAcY,MAAd,GAAuBjC,IAAvB,CAA4B,YAA5B,CAAlB;AACA,wBAAIgC,YAAY/Q,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B+Q,kCAAY9B,GAAZ,CAAgB,kBAAhB,EAAoC,aAApC;AACA8B,kCAAY/B,MAAZ,CAAmB,UAAUhE,WAAWH,cAAxC,EAAwDoG,QAAxD,CAAiE,eAAjE;AACAF,kCAAYC,MAAZ,CAAmB,KAAnB,EAA0B/B,GAA1B,CAA8B,YAA9B,EAA4C,QAA5C,EAAsDA,GAAtD,CAA0D,kBAA1D,EAA8EjE,WAAWnK,KAAzF;AACD,qBAJD,MAIO;AACL,0BAAIqQ,WAAWb,GAAGC,MAAH,CAAUF,cAAc,CAAd,CAAV,CAAf;AACA;AACA,0BAAIzP,IAAIuQ,SAASlC,MAAT,CAAgB,GAAhB,CAAR;AACArO,wBAAEiQ,OAAF,CAAU,eAAV;AACAjQ,wBAAE6P,KAAF,CAAQ,kBAAR,EAA4BxF,WAAWnK,KAAvC;AACAF,wBAAE4I,IAAF,CAAOyB,WAAWH,cAAlB;AACD;AACF,mBAlBD,MAkBO;AACLuF,oCAAgB5J,EAAEkC,GAAF,EAAOqG,IAAP,CAAY,oBAAoBoB,GAApB,GAA0B,IAAtC,CAAhB,CADK,CACwD;AAC7D,wBAAIC,cAAcpQ,MAAd,KAAyB,CAA7B,EAAgC;AAC9BJ,8BAAQC,KAAR,CAAc,mDAAmDsQ,GAAjE;AACA;AACD;AACD;AACAC,kCAAcY,MAAd,GAAuBjC,IAAvB,CAA4B,uBAA5B,EAAqDE,GAArD,CAAyD,MAAzD,EAAiEjE,WAAWnK,KAA5E;AACAuP,kCAAcpB,MAAd,CAAqB,OAAOhE,WAAWH,cAAvC;AACD;AACF;;AAEDjL,wBAAQC,KAAR,CAAcuQ,aAAd;AACAxQ,wBAAQC,KAAR,CAAc,eAAesQ,GAAf,GAAqB,YAArB,GAAoCnF,WAAWnK,KAA7D;AACD;AACD;AACD,aA5H4B,CA4H3B;AACH;;;;QAxlBuBG,gB;;AAgnB1B4D,kBAAYuM,WAAZ,GAA0B,aAA1B;;6BAGEvM,W;;kCACAA,W","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport {\n  diagramEditor,\n  displayEditor,\n  compositeEditor\n} from './properties';\nimport _ from 'lodash';\nimport './series_overrides_diagram_ctrl';\nimport './css/diagram.css!';\n\nconst panelDefaults = {\n  composites: [],\n  // other style overrides\n  seriesOverrides: [],\n  thresholds: '0,10',\n  decimals: 2, // decimal precision\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\n  legend: {\n    show: true,\n    min: true,\n    max: true,\n    avg: true,\n    current: true,\n    total: true,\n    gradient: {\n      enabled: true,\n      show: true\n    }\n  },\n  maxDataPoints: 100,\n  mappingType: 1,\n  maxWidth: false,\n  nullPointMode: 'connected',\n  format: 'none',\n  valueName: 'avg',\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\n  valueMaps: [{\n    value: 'null',\n    op: '=',\n    text: 'N/A'\n  }],\n  content: 'graph LR\\n' +\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\n    'A --> C(Round Rect)\\n' +\n    'B --> D{Rhombus}\\n' +\n    'C --> D\\n',\n  mode: 'content', //allowed values: 'content' and 'url'\n  mermaidServiceUrl: '',\n  init: {\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\n    cloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\n    flowchart: {\n      htmlLabels: true,\n      useMaxWidth: true\n    },\n    sequenceDiagram: {\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\n      actorMargin: 50, // - Margin between actors\n      width: 150, // - Width of actor boxes\n      height: 65, // - Height of actor boxes00000000001111\n      boxMargin: 10, // - Margin around l01oop boxes\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\n      noteMargin: 10, // - margin around notes\n      messageMargin: 35, // - Space between messages\n      mirrorActors: true, // - mirror actors under diagram\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\n    },\n    gantt: {\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\n      barHeight: 20, // - the height of the bars in the graph\n      barGap: 4, // - the margin between the different activities in the gantt diagram\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\n      fontSize: 11, // - font size ...\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\n      numberSectionStyles: 3, // - the number of alternating section styles\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\n\t\t\t\t[\n\t\t        // Within a day\n\t\t        ['%I:%M', function (d) {\n\t\t            return d.getHours();\n\t\t        }],\n\t\t        // Monday a week\n\t\t        ['w. %U', function (d) {\n\t\t            return d.getDay() == 1;\n\t\t        }],\n\t\t        // Day within a week (not monday)\n\t\t        ['%a %d', function (d) {\n\t\t            return d.getDay() && d.getDate() != 1;\n\t\t        }],\n\t\t        // within a month\n\t\t        ['%b %d', function (d) {\n\t\t            return d.getDate() != 1;\n\t\t        }],\n\t\t        // Month\n\t\t        ['%m-%y', function (d) {\n\t\t            return d.getMonth();\n\t\t        }]] **/\n    },\n    //classDiagram: {},\n    //info: {}\n  }\n};\n\nclass DiagramCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $sce, $http) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.$http = $http;\n    this.panel.graphId = 'diagram_' + this.panel.id;\n    this.containerDivId = 'container_' + this.panel.graphId;\n    this.$sce = $sce;\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.unitFormats = kbn.getUnitFormats();\n    this.initializeMermaid();\n  }\n\n  initializeMermaid() {\n    mermaidAPI.initialize(this.panel.init);\n    mermaidAPI.parseError = this.handleParseError.bind(this);\n  }\n\n  handleParseError(err, hash) {\n    this.error = 'Failed to parse diagram definition';\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Diagram', diagramEditor, 2);\n    this.addEditorTab('Display', displayEditor, 3);\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\n  }\n\n  getDiagramContainer() {\n    return $(document.getElementById(this.containerDivId));\n  }\n\n  onDataReceived(dataList) {\n    console.debug('received data');\n    console.debug(dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    console.debug('mapped dataList to series');\n    console.debug(this.series);\n\n    var data = {};\n    this.setValues(data);\n    this.updateDiagram(data);\n    this.svgData = data;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_'),\n      unit: seriesData.unit\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  } // End seriesHandler()\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  addComposite(composite) {\n    this.panel.composites.push(composite || {});\n  }\n  removeComposite(composite) {\n    this.panel.composites = _.without(this.panel.composites, composite);\n    this.render();\n  }\n  getSeriesNamesForComposites() {\n    return _.map(this.$scope.ctrl.series, function(series) {\n      return series.alias;\n    });\n  }\n\n  addMetricToComposite(composite) {\n    if (composite.metrics === undefined) {\n      composite.metrics = [{}];\n    } else {\n      composite.metrics.push({});\n    }\n  }\n  removeMetricFromComposite(composite, metric) {\n    composite.metrics = _.without(composite.metrics, metric);\n  }\n\n  updateThresholds() {\n    var thresholdCount = this.panel.thresholds.length;\n    var colorCount = this.panel.colors.length;\n    this.refresh();\n  }\n\n  changeColor(colorIndex, color) {\n    this.panel.colors[colorIndex] = color;\n  }\n\n  removeColor(colorIndex) {\n    this.panel.colors.splice(colorIndex, 1);\n  }\n\n  addColor() {\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  clearDiagram() {\n    $('#' + this.panel.graphId).remove();\n    this.svg = {};\n  }\n\n  updateDiagram(data) {\n    if (this.panel.content.length > 0) {\n      this.clearDiagram();\n\n      var mode = this.panel.mode;\n      var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\n\n      function updateDiagram_cont(_this, graphDefinition) {\n        // substitute values inside \"link text\"\n        // this will look for any composite prefixed with a # and substitute the value of the composite\n        // if a series alias is found, in the form #alias, the value will be substituted\n        // this allows link values to be displayed based on the metric\n        graphDefinition = _this.substituteHashPrefixedNotation(graphDefinition, data);\n        graphDefinition = _this.templateSrv.replaceWithText(graphDefinition);\n        _this.diagramType = mermaidAPI.detectType(graphDefinition);\n        var diagramContainer = $(document.getElementById(_this.containerDivId));\n\n        var renderCallback = function(svgCode, bindFunctions) {\n          if (svgCode === '') {\n            diagramContainer.html('There was a problem rendering the graph');\n          } else {\n            diagramContainer.html(svgCode);\n            bindFunctions(diagramContainer[0]);\n          }\n        };\n        // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n        mermaidAPI.render(_this.panel.graphId, graphDefinition, renderCallback);\n      }\n\n      if (mode == 'url') {\n        var _this = this;\n        this.$http({\n          method: 'GET',\n          url: templatedURL\n        }).then(function successCallback(response) {\n          //the response must have text/plain content-type\n          // console.info(response.data);\n          updateDiagram_cont.call(_this, response.data);\n        }, function errorCallback(response) {\n          console.warn('error', response);\n        })\n      } else {\n        updateDiagram_cont(this, this.panel.content);\n      }\n    }\n  } // End updateDiagram()\n\n\n\n  /**\n   * substitute values inside \"link text\"\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\n   * if a series alias is found, in the form #alias, the value will be substituted\n   * this allows link values to be displayed based on the metric\n   *\n   * Prefix Modifier For Composites\n   *   # Raw Value of Series\n   *   ! Raw Value plus Metric Name\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\n   *\n   * Prefix Modifier For Series\n   *   # Raw Value of Series\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\n   * @param  {[Array]} data [Series Data]\n   * @return {[String]} [Modified Graph Definition]\n   */\n  substituteHashPrefixedNotation(graphDefinition, data) {\n    // inspect the string, locate all # prefixed items, and replace them with the value\n    // of the series. If no matching series is found, leave it alone\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\n    if (matches === null) return graphDefinition;\n    // check if there is a composite with a matching name\n    for (var i = 0; i < matches.length; i++) {\n      var aMatch = matches[i];\n      var valueType = aMatch[0];\n      aMatch = aMatch.substring(1);\n      // check composites first\n      for (var j = 0; j < this.panel.composites.length; j++) {\n        var aComposite = this.panel.composites[j];\n        if (aComposite.name === aMatch) {\n          // found matching composite, get the valueFormatted\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[aComposite.name].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '!':\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[aComposite.name].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n            case '&':\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n      // next check series\n      for (var k = 0; k < this.series.length; k++) {\n        var seriesItem = this.series[k];\n        if (seriesItem.alias === aMatch) {\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[seriesItem.alias].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[seriesItem.alias].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n    }\n    return graphDefinition;\n  }\n\n  renderDiagram(data, graphDefinition) {\n    console.debug(graphDefinition);\n    graphDefinition = this.templateSrv.replace(graphDefinition);\n    console.debug(graphDefinition);\n    this.diagramType = mermaidAPI.detectType(graphDefinition);\n    var diagramContainer = $(document.getElementById(this.containerDivId));\n\n    var renderCallback = function(svgCode, bindFunctions) {\n      if (svgCode == '') {\n        diagramContainer.html('There was a problem rendering the graph');\n      } else {\n        diagramContainer.html(svgCode);\n        bindFunctions(diagramContainer[0]);\n      }\n    };\n    // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n    mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\n    this.svgData = data;\n    this.render();\n  }\n\n\n  setValues(data) {\n    if (this.series && this.series.length > 0) {\n      for (var i = 0; i < this.series.length; i++) {\n        var seriesItem = this.series[i];\n        console.debug('setting values for series');\n        console.debug(seriesItem);\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\n        var lastPoint = _.last(seriesItem.datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueRounded = 0;\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\n        } else if (_.isString(lastValue)) {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\n          data[seriesItem.alias].valueRounded = 0;\n        } else {\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\n          // put the value in quotes to escape \"most\" special characters\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\n        }\n        if (this.panel.legend.gradient.enabled) {\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        } else {\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        }\n      }\n    }\n    // now add the composites to data\n    for (var i = 0; i < this.panel.composites.length; i++) {\n      var aComposite = this.panel.composites[i];\n      var currentWorstSeries = null;\n      var currentWorstSeriesName = null;\n      for (var j = 0; j < aComposite.metrics.length; j++) {\n        var aMetric = aComposite.metrics[j];\n        var seriesName = aMetric.seriesName;\n        var seriesItem = data[seriesName];\n        // add the name of the series Item\n        seriesItem.nameOfMetric = seriesName;\n        // check colorData thresholds\n        if (currentWorstSeries === null) {\n          currentWorstSeries = seriesItem;\n          currentWorstSeriesName = seriesItem.nameOfMetric;\n        } else {\n          currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem);\n          currentWorstSeriesName = currentWorstSeries.nameOfMetric;\n        }\n        delete seriesItem.nameOfMetric;\n      }\n      // Prefix the valueFormatted with the actual metric name\n      currentWorstSeries.valueFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      currentWorstSeries.valueRawFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.value;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      data[aComposite.name] = currentWorstSeries;\n    }\n  } // End setValues()\n\n  getWorstSeries(series1, series2) {\n    var worstSeries = series1;\n    var series1thresholdLevel = this.getThresholdLevel(series1);\n    var series2thresholdLevel = this.getThresholdLevel(series2);\n    console.log(\"Series1 threshold level: \" + series1thresholdLevel);\n    console.log(\"Series2 threshold level: \" + series2thresholdLevel);\n    if (series2thresholdLevel > series1thresholdLevel) {\n      // series2 has higher threshold violation\n      worstSeries = series2;\n    }\n    return worstSeries;\n  }\n\n  // returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\n  getThresholdLevel(series) {\n    // default to ok\n    var thresholdLevel = 0;\n    var value = series.value;\n    var thresholds = series.colorData.thresholds;\n    // if no thresholds are defined, return 0\n    if (thresholds === undefined) {\n      return thresholdLevel;\n    }\n    // make sure thresholds is an array of size 2\n    if (thresholds.length !== 2) {\n      return thresholdLevel;\n    }\n    if (value >= thresholds[0]) {\n      // value is equal or greater than first threshold\n      thresholdLevel = 1;\n    }\n    if (value >= thresholds[1]) {\n      // value is equal or greater than second threshold\n      thresholdLevel = 2;\n    }\n    return thresholdLevel;\n  }\n\n  getGradientForValue(data, value) {\n    console.debug('Getting gradient for value');\n    console.debug(data);\n    console.debug(value);\n    var min = Math.min.apply(Math, data.thresholds);\n    var max = Math.max.apply(Math, data.thresholds);\n    var absoluteDistance = max - min;\n    var valueDistanceFromMin = value - min;\n    var xPercent = valueDistanceFromMin / absoluteDistance;\n    // Get the smaller number to clamp at 0.999 max\n    xPercent = Math.min(0.999, xPercent);\n    // Get the larger number to clamp at 0.001 min\n    xPercent = Math.max(0.001, xPercent);\n    if (data.invertColors) {\n      xPercent = 1 - xPercent;\n    }\n\n    return getColorByXPercentage(this.canvas, xPercent);\n  }\n\n  applyOverrides(seriesItemAlias) {\n    var seriesItem = {},\n      colorData = {},\n      overrides = {};\n\n    console.debug('applying overrides for seriesItem');\n    console.debug(seriesItemAlias);\n    console.debug(this.panel.seriesOverrides);\n    for (var i = 0; i <= this.panel.seriesOverrides.length; i++) {\n      console.debug('comparing:');\n      console.debug(this.panel.seriesOverrides[i]);\n\n      if (this.panel.seriesOverrides[i]) {\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\n        var matches = seriesItemAlias.match(regex);\n        if (matches && matches.length > 0) {\n          overrides = this.panel.seriesOverrides[i];\n        }\n      }\n    }\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\n      return Number(strVale.trim());\n    });\n    colorData.colorMap = this.panel.colors.slice();\n    colorData.invertColors = overrides.invertColors || false;\n    if (colorData.invertColors) {\n      colorData.colorMap.reverse();\n    }\n    seriesItem.colorData = colorData;\n\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\n\n    seriesItem.format = overrides.unitFormat || this.panel.format;\n    return seriesItem;\n  }\n\n  invertColorOrder() {\n    this.panel.colors.reverse();\n    this.refresh();\n  }\n\n  getDecimalsForValue(value) {\n    //debugger;\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var templateSrv = this.templateSrv;\n    var diagramElement = elem.find('.diagram');\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\n    console.debug('found diagramContainer');\n    console.debug(diagramContainer);\n    elem.css('height', ctrl.height + 'px');\n\n    var canvas = elem.find('.canvas')[0];\n    ctrl.canvas = canvas;\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\n\n    function render() {\n      setElementHeight();\n      updateCanvasStyle();\n      updateStyle();\n    }\n\n    function updateCanvasStyle() {\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\n      var canvasContext = canvas.getContext(\"2d\");\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\n        var currentColor = ctrl.panel.colors[i];\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\n      }\n      canvasContext.fillStyle = grd;\n      canvasContext.fillRect(0, 0, canvas.width, 3);\n      ctrl.canvasContext = canvasContext;\n\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\n    }\n\n\n\n    function setElementHeight() {\n      //diagramContainer.css('height', ctrl.height + 'px');\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n\n    function updateStyle() {\n      var data = ctrl.svgData;\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\n      console.debug('updating svg style');\n      var svg = $(document.getElementById(ctrl.panel.graphId));\n      $(svg).css('min-width', $(svg).css('max-width'));\n      if (ctrl.panel.maxWidth) {\n        $(svg).css('max-width', '100%');\n      }\n\n      if (svg[0] === undefined) {\n        return;\n      }\n\n      for (var key in data) {\n        var seriesItem = data[key];\n\n        // Find nodes by ID if we can\n        //console.info('finding targetElement');\n        var targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\n\n        if (targetElement[0][0] !== null) { // probably a flowchart\n          targetElement.selectAll('rect,circle,polygon').style('fill', seriesItem.color);\n\n          var div = targetElement.select('div');\n          var fo = targetElement.select('foreignObject');\n          // make foreign object element taller to accomdate value in FireFox/IE\n          fo.attr('height', 45);\n          // Add value text\n          var p = div.append('p');\n          p.classed('diagram-value');\n          p.style('background-color', seriesItem.color);\n          p.html(seriesItem.valueFormatted);\n        } else {\n          console.debug('finding element that contains id: ' + key);\n          // maybe a flowchart with an alias text node\n          targetElement = $(svg).find('div:contains(\"' + key + '\")').filter(function() {\n            // Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\n            return $(this).attr('id') === key;\n          });\n          if (targetElement.length > 0) {\n            targetElement.parents('.node').find('rect, circle, polygon').css('fill', seriesItem.color);\n            // make foreign object element taller to accomdate value in FireFox/IE\n            targetElement.parents('.node').find('foreignObject').attr('height', 45);\n            // for edge matches\n            var edgeElement = targetElement.parent().find('.edgeLabel');\n            if (edgeElement.length > 0) {\n              edgeElement.css('background-color', 'transparent');\n              edgeElement.append('<br/>' + seriesItem.valueFormatted).addClass('diagram-value');\n              edgeElement.parent('div').css('text-align', 'center').css('background-color', seriesItem.color);\n            } else {\n              var dElement = d3.select(targetElement[0]);\n              // Add value text\n              var p = dElement.append('p');\n              p.classed('diagram-value');\n              p.style('background-color', seriesItem.color);\n              p.html(seriesItem.valueFormatted);\n            }\n          } else {\n            targetElement = $(svg).find('text:contains(\"' + key + '\")'); // sequence diagram, gantt ?\n            if (targetElement.length === 0) {\n              console.debug('couldnt not find a diagram node with id/text: ' + key);\n              continue;\n            }\n            // for node matches\n            targetElement.parent().find('rect, circle, polygon').css('fill', seriesItem.color);\n            targetElement.append('\\n' + seriesItem.valueFormatted);\n          }\n        }\n\n        console.debug(targetElement);\n        console.debug('set nodes:' + key + ' to color:' + seriesItem.color);\n      }\n      //return $(svg).html();\n    } // End updateStyle()\n  }\n  // End Class\n}\n\nfunction getColorForValue(data, value) {\n  console.debug('Getting color for value');\n  console.debug(data);\n  console.debug(value);\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nfunction getColorByXPercentage(canvas, xPercent) {\n  var x = canvas.width * xPercent;\n  var context = canvas.getContext(\"2d\");\n  var p = context.getImageData(x, 1, 1, 1).data;\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\n  return color;\n}\n\nDiagramCtrl.templateUrl = 'module.html';\n\nexport {\n  DiagramCtrl,\n  DiagramCtrl as MetricsPanelCtrl\n};\n"]}